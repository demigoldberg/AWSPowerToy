<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.ECS</name>
    </assembly>
    <members>
        <member name="T:Amazon.ECS.AmazonECSConfig">
            <summary>
            Configuration for accessing Amazon ECS service
            </summary>
        </member>
        <member name="M:Amazon.ECS.AmazonECSConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.ECS.AmazonECSConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.ECS.AmazonECSConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.ECS.AmazonECSConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.ECS.AmazonECSException">
            <summary>
             Common exception for the ECS service.
             </summary>
        </member>
        <member name="M:Amazon.ECS.AmazonECSException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonECSException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonECSException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonECSException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonECSException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonECSException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonECSException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.ECS.AgentUpdateStatus">
            <summary>
            Constants used for properties of type AgentUpdateStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.AgentUpdateStatus.FAILED">
            <summary>
            Constant FAILED for AgentUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.AgentUpdateStatus.PENDING">
            <summary>
            Constant PENDING for AgentUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.AgentUpdateStatus.STAGED">
            <summary>
            Constant STAGED for AgentUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.AgentUpdateStatus.STAGING">
            <summary>
            Constant STAGING for AgentUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.AgentUpdateStatus.UPDATED">
            <summary>
            Constant UPDATED for AgentUpdateStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.AgentUpdateStatus.UPDATING">
            <summary>
            Constant UPDATING for AgentUpdateStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.AgentUpdateStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.AgentUpdateStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.AgentUpdateStatus.op_Implicit(System.String)~Amazon.ECS.AgentUpdateStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.ContainerInstanceStatus">
            <summary>
            Constants used for properties of type ContainerInstanceStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerInstanceStatus.ACTIVE">
            <summary>
            Constant ACTIVE for ContainerInstanceStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.ContainerInstanceStatus.DRAINING">
            <summary>
            Constant DRAINING for ContainerInstanceStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.ContainerInstanceStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.ContainerInstanceStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.ContainerInstanceStatus.op_Implicit(System.String)~Amazon.ECS.ContainerInstanceStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.DesiredStatus">
            <summary>
            Constants used for properties of type DesiredStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.DesiredStatus.PENDING">
            <summary>
            Constant PENDING for DesiredStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.DesiredStatus.RUNNING">
            <summary>
            Constant RUNNING for DesiredStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.DesiredStatus.STOPPED">
            <summary>
            Constant STOPPED for DesiredStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.DesiredStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.DesiredStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.DesiredStatus.op_Implicit(System.String)~Amazon.ECS.DesiredStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.LogDriver">
            <summary>
            Constants used for properties of type LogDriver.
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.Awslogs">
            <summary>
            Constant Awslogs for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.Fluentd">
            <summary>
            Constant Fluentd for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.Gelf">
            <summary>
            Constant Gelf for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.Journald">
            <summary>
            Constant Journald for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.JsonFile">
            <summary>
            Constant JsonFile for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.Splunk">
            <summary>
            Constant Splunk for LogDriver
            </summary>
        </member>
        <member name="F:Amazon.ECS.LogDriver.Syslog">
            <summary>
            Constant Syslog for LogDriver
            </summary>
        </member>
        <member name="M:Amazon.ECS.LogDriver.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.LogDriver.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.LogDriver.op_Implicit(System.String)~Amazon.ECS.LogDriver">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.NetworkMode">
            <summary>
            Constants used for properties of type NetworkMode.
            </summary>
        </member>
        <member name="F:Amazon.ECS.NetworkMode.Bridge">
            <summary>
            Constant Bridge for NetworkMode
            </summary>
        </member>
        <member name="F:Amazon.ECS.NetworkMode.Host">
            <summary>
            Constant Host for NetworkMode
            </summary>
        </member>
        <member name="F:Amazon.ECS.NetworkMode.None">
            <summary>
            Constant None for NetworkMode
            </summary>
        </member>
        <member name="M:Amazon.ECS.NetworkMode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.NetworkMode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.NetworkMode.op_Implicit(System.String)~Amazon.ECS.NetworkMode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.PlacementConstraintType">
            <summary>
            Constants used for properties of type PlacementConstraintType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.PlacementConstraintType.DistinctInstance">
            <summary>
            Constant DistinctInstance for PlacementConstraintType
            </summary>
        </member>
        <member name="F:Amazon.ECS.PlacementConstraintType.MemberOf">
            <summary>
            Constant MemberOf for PlacementConstraintType
            </summary>
        </member>
        <member name="M:Amazon.ECS.PlacementConstraintType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.PlacementConstraintType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.PlacementConstraintType.op_Implicit(System.String)~Amazon.ECS.PlacementConstraintType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.PlacementStrategyType">
            <summary>
            Constants used for properties of type PlacementStrategyType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.PlacementStrategyType.Binpack">
            <summary>
            Constant Binpack for PlacementStrategyType
            </summary>
        </member>
        <member name="F:Amazon.ECS.PlacementStrategyType.Random">
            <summary>
            Constant Random for PlacementStrategyType
            </summary>
        </member>
        <member name="F:Amazon.ECS.PlacementStrategyType.Spread">
            <summary>
            Constant Spread for PlacementStrategyType
            </summary>
        </member>
        <member name="M:Amazon.ECS.PlacementStrategyType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.PlacementStrategyType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.PlacementStrategyType.op_Implicit(System.String)~Amazon.ECS.PlacementStrategyType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.SortOrder">
            <summary>
            Constants used for properties of type SortOrder.
            </summary>
        </member>
        <member name="F:Amazon.ECS.SortOrder.ASC">
            <summary>
            Constant ASC for SortOrder
            </summary>
        </member>
        <member name="F:Amazon.ECS.SortOrder.DESC">
            <summary>
            Constant DESC for SortOrder
            </summary>
        </member>
        <member name="M:Amazon.ECS.SortOrder.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.SortOrder.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.SortOrder.op_Implicit(System.String)~Amazon.ECS.SortOrder">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TargetType">
            <summary>
            Constants used for properties of type TargetType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TargetType.ContainerInstance">
            <summary>
            Constant ContainerInstance for TargetType
            </summary>
        </member>
        <member name="M:Amazon.ECS.TargetType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TargetType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TargetType.op_Implicit(System.String)~Amazon.ECS.TargetType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TaskDefinitionFamilyStatus">
            <summary>
            Constants used for properties of type TaskDefinitionFamilyStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskDefinitionFamilyStatus.ACTIVE">
            <summary>
            Constant ACTIVE for TaskDefinitionFamilyStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskDefinitionFamilyStatus.ALL">
            <summary>
            Constant ALL for TaskDefinitionFamilyStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskDefinitionFamilyStatus.INACTIVE">
            <summary>
            Constant INACTIVE for TaskDefinitionFamilyStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionFamilyStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionFamilyStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionFamilyStatus.op_Implicit(System.String)~Amazon.ECS.TaskDefinitionFamilyStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TaskDefinitionPlacementConstraintType">
            <summary>
            Constants used for properties of type TaskDefinitionPlacementConstraintType.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskDefinitionPlacementConstraintType.MemberOf">
            <summary>
            Constant MemberOf for TaskDefinitionPlacementConstraintType
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionPlacementConstraintType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionPlacementConstraintType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionPlacementConstraintType.op_Implicit(System.String)~Amazon.ECS.TaskDefinitionPlacementConstraintType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TaskDefinitionStatus">
            <summary>
            Constants used for properties of type TaskDefinitionStatus.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskDefinitionStatus.ACTIVE">
            <summary>
            Constant ACTIVE for TaskDefinitionStatus
            </summary>
        </member>
        <member name="F:Amazon.ECS.TaskDefinitionStatus.INACTIVE">
            <summary>
            Constant INACTIVE for TaskDefinitionStatus
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TaskDefinitionStatus.op_Implicit(System.String)~Amazon.ECS.TaskDefinitionStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.TransportProtocol">
            <summary>
            Constants used for properties of type TransportProtocol.
            </summary>
        </member>
        <member name="F:Amazon.ECS.TransportProtocol.Tcp">
            <summary>
            Constant Tcp for TransportProtocol
            </summary>
        </member>
        <member name="F:Amazon.ECS.TransportProtocol.Udp">
            <summary>
            Constant Udp for TransportProtocol
            </summary>
        </member>
        <member name="M:Amazon.ECS.TransportProtocol.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.TransportProtocol.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.TransportProtocol.op_Implicit(System.String)~Amazon.ECS.TransportProtocol">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.UlimitName">
            <summary>
            Constants used for properties of type UlimitName.
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Core">
            <summary>
            Constant Core for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Cpu">
            <summary>
            Constant Cpu for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Data">
            <summary>
            Constant Data for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Fsize">
            <summary>
            Constant Fsize for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Locks">
            <summary>
            Constant Locks for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Memlock">
            <summary>
            Constant Memlock for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Msgqueue">
            <summary>
            Constant Msgqueue for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Nice">
            <summary>
            Constant Nice for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Nofile">
            <summary>
            Constant Nofile for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Nproc">
            <summary>
            Constant Nproc for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Rss">
            <summary>
            Constant Rss for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Rtprio">
            <summary>
            Constant Rtprio for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Rttime">
            <summary>
            Constant Rttime for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Sigpending">
            <summary>
            Constant Sigpending for UlimitName
            </summary>
        </member>
        <member name="F:Amazon.ECS.UlimitName.Stack">
            <summary>
            Constant Stack for UlimitName
            </summary>
        </member>
        <member name="M:Amazon.ECS.UlimitName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ECS.UlimitName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ECS.UlimitName.op_Implicit(System.String)~Amazon.ECS.UlimitName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.AmazonECSRequest">
            <summary>
            Base class for ECS operation requests.
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Attribute">
            <summary>
            An attribute is a name-value pair associated with an Amazon ECS object. Attributes
            enable you to extend the Amazon ECS data model by adding custom metadata to your resources.
            For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes">Attributes</a>
            in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Attribute.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the attribute. Up to 128 letters (uppercase and lowercase), numbers, hyphens,
            underscores, and periods are allowed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Attribute.TargetId">
            <summary>
            Gets and sets the property TargetId. 
            <para>
            The ID of the target. You can specify the short form ID for a resource or the full
            Amazon Resource Name (ARN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Attribute.TargetType">
            <summary>
            Gets and sets the property TargetType. 
            <para>
            The type of the target with which to attach the attribute. This parameter is required
            if you use the short form ID for a resource instead of the full Amazon Resource Name
            (ARN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Attribute.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the attribute. Up to 128 letters (uppercase and lowercase), numbers,
            hyphens, underscores, periods, at signs (@), forward slashes, colons, and spaces are
            allowed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.AttributeLimitExceededException">
            <summary>
             ECS exception
             </summary>
        </member>
        <member name="M:Amazon.ECS.Model.AttributeLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new AttributeLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.AttributeLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AttributeLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.AttributeLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of AttributeLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.AttributeLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AttributeLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.AttributeLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AttributeLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.AttributeLimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AttributeLimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.ClientException">
            <summary>
             ECS exception
             </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ClientException.#ctor(System.String)">
            <summary>
            Constructs a new ClientException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ClientException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClientException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClientException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClientException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ClientException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.Cluster">
            <summary>
            A regional grouping of one or more container instances on which you can run task requests.
            Each account receives a default cluster the first time you use the Amazon ECS service,
            but you may also create other clusters. Clusters may contain more than one instance
            type simultaneously.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.ActiveServicesCount">
            <summary>
            Gets and sets the property ActiveServicesCount. 
            <para>
            The number of services that are running on the cluster in an <code>ACTIVE</code> state.
            You can view these services with <a>ListServices</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.ClusterArn">
            <summary>
            Gets and sets the property ClusterArn. 
            <para>
            The Amazon Resource Name (ARN) that identifies the cluster. The ARN contains the <code>arn:aws:ecs</code>
            namespace, followed by the region of the cluster, the AWS account ID of the cluster
            owner, the <code>cluster</code> namespace, and then the cluster name. For example,
            <code>arn:aws:ecs:<i>region</i>:<i>012345678910</i>:cluster/<i>test</i> </code>..
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            A user-generated string that you use to identify your cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.PendingTasksCount">
            <summary>
            Gets and sets the property PendingTasksCount. 
            <para>
            The number of tasks in the cluster that are in the <code>PENDING</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.RegisteredContainerInstancesCount">
            <summary>
            Gets and sets the property RegisteredContainerInstancesCount. 
            <para>
            The number of container instances registered into the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.RunningTasksCount">
            <summary>
            Gets and sets the property RunningTasksCount. 
            <para>
            The number of tasks in the cluster that are in the <code>RUNNING</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Cluster.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the cluster. The valid values are <code>ACTIVE</code> or <code>INACTIVE</code>.
            <code>ACTIVE</code> indicates that you can register container instances with the cluster
            and the associated instances can accept tasks.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ClusterContainsContainerInstancesException">
            <summary>
             ECS exception
             </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsContainerInstancesException.#ctor(System.String)">
            <summary>
            Constructs a new ClusterContainsContainerInstancesException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsContainerInstancesException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClusterContainsContainerInstancesException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsContainerInstancesException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClusterContainsContainerInstancesException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsContainerInstancesException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterContainsContainerInstancesException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsContainerInstancesException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterContainsContainerInstancesException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsContainerInstancesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ClusterContainsContainerInstancesException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.ClusterContainsServicesException">
            <summary>
             ECS exception
             </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsServicesException.#ctor(System.String)">
            <summary>
            Constructs a new ClusterContainsServicesException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsServicesException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClusterContainsServicesException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsServicesException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClusterContainsServicesException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsServicesException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterContainsServicesException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsServicesException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterContainsServicesException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterContainsServicesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ClusterContainsServicesException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.ClusterNotFoundException">
            <summary>
             ECS exception
             </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ClusterNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClusterNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClusterNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ClusterNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ClusterNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.Container">
            <summary>
            A Docker container that is part of a task.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.ContainerArn">
            <summary>
            Gets and sets the property ContainerArn. 
            <para>
            The Amazon Resource Name (ARN) of the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.ExitCode">
            <summary>
            Gets and sets the property ExitCode. 
            <para>
            The exit code returned from the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.LastStatus">
            <summary>
            Gets and sets the property LastStatus. 
            <para>
            The last known status of the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.NetworkBindings">
            <summary>
            Gets and sets the property NetworkBindings. 
            <para>
            The network bindings associated with the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            A short (255 max characters) human-readable string to provide additional details about
            a running or stopped container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Container.TaskArn">
            <summary>
            Gets and sets the property TaskArn. 
            <para>
            The Amazon Resource Name (ARN) of the task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ContainerDefinition">
            <summary>
            Container definitions are used in task definitions to describe the different containers
            that are launched as part of a task.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            The command that is passed to the container. This parameter maps to <code>Cmd</code>
            in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>COMMAND</code> parameter to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>. For more information, see <a href="https://docs.docker.com/engine/reference/builder/#cmd">https://docs.docker.com/engine/reference/builder/#cmd</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Cpu">
            <summary>
            Gets and sets the property Cpu. 
            <para>
            The number of <code>cpu</code> units reserved for the container. A container instance
            has 1,024 <code>cpu</code> units for every CPU core. This parameter specifies the
            minimum amount of CPU to reserve for a container, and containers share unallocated
            CPU units with other containers on the instance with the same ratio as their allocated
            amount. This parameter maps to <code>CpuShares</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>--cpu-shares</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
             <note> 
            <para>
            You can determine the number of CPU units that are available per EC2 instance type
            by multiplying the vCPUs listed for that instance type on the <a href="http://aws.amazon.com/ec2/instance-types/">Amazon
            EC2 Instances</a> detail page by 1,024.
            </para>
             </note> 
            <para>
            For example, if you run a single-container task on a single-core instance type with
            512 CPU units specified for that container, and that is the only task running on the
            container instance, that container could use the full 1,024 CPU unit share at any
            given time. However, if you launched another copy of the same task on that container
            instance, each task would be guaranteed a minimum of 512 CPU units when needed, and
            each container could float to higher CPU usage if the other container was not using
            it, but if both tasks were 100% active all of the time, they would be limited to 512
            CPU units.
            </para>
             
            <para>
            The Docker daemon on the container instance uses the CPU value to calculate the relative
            CPU share ratios for running containers. For more information, see <a href="https://docs.docker.com/engine/reference/run/#cpu-share-constraint">CPU
            share constraint</a> in the Docker documentation. The minimum valid CPU share value
            that the Linux kernel allows is 2; however, the CPU parameter is not required, and
            you can use CPU values below 2 in your container definitions. For CPU values below
            2 (including null), the behavior varies based on your Amazon ECS container agent version:
            </para>
             <ul> <li> 
            <para>
             <b>Agent versions less than or equal to 1.1.0:</b> Null and zero CPU values are passed
            to Docker as 0, which Docker then converts to 1,024 CPU shares. CPU values of 1 are
            passed to Docker as 1, which the Linux kernel converts to 2 CPU shares.
            </para>
             </li> <li> 
            <para>
             <b>Agent versions greater than or equal to 1.2.0:</b> Null, zero, and CPU values
            of 1 are passed to Docker as 2.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.DisableNetworking">
            <summary>
            Gets and sets the property DisableNetworking. 
            <para>
            When this parameter is true, networking is disabled within the container. This parameter
            maps to <code>NetworkDisabled</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.DnsSearchDomains">
            <summary>
            Gets and sets the property DnsSearchDomains. 
            <para>
            A list of DNS search domains that are presented to the container. This parameter maps
            to <code>DnsSearch</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>--dns-search</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.DnsServers">
            <summary>
            Gets and sets the property DnsServers. 
            <para>
            A list of DNS servers that are presented to the container. This parameter maps to
            <code>Dns</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>--dns</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.DockerLabels">
            <summary>
            Gets and sets the property DockerLabels. 
            <para>
            A key/value map of labels to add to the container. This parameter maps to <code>Labels</code>
            in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>--label</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>. This parameter requires version 1.18 of the Docker Remote API or greater
            on your container instance. To check the Docker Remote API version on your container
            instance, log into your container instance and run the following command: <code>sudo
            docker version | grep "Server API version"</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.DockerSecurityOptions">
            <summary>
            Gets and sets the property DockerSecurityOptions. 
            <para>
            A list of strings to provide custom labels for SELinux and AppArmor multi-level security
            systems. This parameter maps to <code>SecurityOpt</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>--security-opt</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
             <note> 
            <para>
            The Amazon ECS container agent running on a container instance must register with
            the <code>ECS_SELINUX_CAPABLE=true</code> or <code>ECS_APPARMOR_CAPABLE=true</code>
            environment variables before containers placed on that instance can use these security
            options. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS Container Agent Configuration</a> in the <i>Amazon EC2 Container Service Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.EntryPoint">
            <summary>
            Gets and sets the property EntryPoint. <important> 
            <para>
            Early versions of the Amazon ECS container agent do not properly handle <code>entryPoint</code>
            parameters. If you have problems using <code>entryPoint</code>, update your container
            agent or enter your commands and arguments as <code>command</code> array items instead.
            </para>
             </important> 
            <para>
            The entry point that is passed to the container. This parameter maps to <code>Entrypoint</code>
            in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>--entrypoint</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>. For more information, see <a href="https://docs.docker.com/engine/reference/builder/#entrypoint">https://docs.docker.com/engine/reference/builder/#entrypoint</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Environment">
            <summary>
            Gets and sets the property Environment. 
            <para>
            The environment variables to pass to a container. This parameter maps to <code>Env</code>
            in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>--env</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
             <important> 
            <para>
            We do not recommend using plain text environment variables for sensitive information,
            such as credential data.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Essential">
            <summary>
            Gets and sets the property Essential. 
            <para>
            If the <code>essential</code> parameter of a container is marked as <code>true</code>,
            and that container fails or stops for any reason, all other containers that are part
            of the task are stopped. If the <code>essential</code> parameter of a container is
            marked as <code>false</code>, then its failure does not affect the rest of the containers
            in a task. If this parameter is omitted, a container is assumed to be essential.
            </para>
             
            <para>
            All tasks must have at least one essential container. If you have an application that
            is composed of multiple containers, you should group containers that are used for
            a common purpose into components, and separate the different components into multiple
            task definitions. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/application_architecture.html">Application
            Architecture</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.ExtraHosts">
            <summary>
            Gets and sets the property ExtraHosts. 
            <para>
            A list of hostnames and IP address mappings to append to the <code>/etc/hosts</code>
            file on the container. This parameter maps to <code>ExtraHosts</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>--add-host</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Hostname">
            <summary>
            Gets and sets the property Hostname. 
            <para>
            The hostname to use for your container. This parameter maps to <code>Hostname</code>
            in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>--hostname</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The image used to start a container. This string is passed directly to the Docker
            daemon. Images in the Docker Hub registry are available by default. Other repositories
            are specified with <code> <i>repository-url</i>/<i>image</i>:<i>tag</i> </code>. Up
            to 255 letters (uppercase and lowercase), numbers, hyphens, underscores, colons, periods,
            forward slashes, and number signs are allowed. This parameter maps to <code>Image</code>
            in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>IMAGE</code> parameter of <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
             <note> 
            <para>
            Amazon ECS task definitions currently only support tags as image identifiers within
            a specified repository (and not <code>sha256</code> digests).
            </para>
             </note> <ul> <li> 
            <para>
            Images in Amazon ECR repositories use the full registry and repository URI (for example,
            <code>012345678910.dkr.ecr.&lt;region-name&gt;.amazonaws.com/&lt;repository-name&gt;</code>).
            
            </para>
             </li> <li> 
            <para>
            Images in official repositories on Docker Hub use a single name (for example, <code>ubuntu</code>
            or <code>mongo</code>).
            </para>
             </li> <li> 
            <para>
            Images in other repositories on Docker Hub are qualified with an organization name
            (for example, <code>amazon/amazon-ecs-agent</code>).
            </para>
             </li> <li> 
            <para>
            Images in other online repositories are qualified further by a domain name (for example,
            <code>quay.io/assemblyline/ubuntu</code>).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Links">
            <summary>
            Gets and sets the property Links. 
            <para>
            The <code>link</code> parameter allows containers to communicate with each other without
            the need for port mappings, using the <code>name</code> parameter and optionally,
            an <code>alias</code> for the link. This construct is analogous to <code>name:alias</code>
            in Docker links. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and
            underscores are allowed for each <code>name</code> and <code>alias</code>. For more
            information on linking Docker containers, see <a href="https://docs.docker.com/engine/userguide/networking/default_network/dockerlinks/">https://docs.docker.com/engine/userguide/networking/default_network/dockerlinks/</a>.
            This parameter maps to <code>Links</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>--link</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
             <important> 
            <para>
            Containers that are collocated on a single container instance may be able to communicate
            with each other without requiring links or host port mappings. Network isolation is
            achieved on the container instance using security groups and VPC settings.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.LogConfiguration">
            <summary>
            Gets and sets the property LogConfiguration. 
            <para>
            The log configuration specification for the container. This parameter maps to <code>LogConfig</code>
            in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>--log-driver</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>. By default, containers use the same logging driver that the Docker daemon
            uses; however the container may use a different logging driver than the Docker daemon
            by specifying a log driver with this parameter in the container definition. To use
            a different logging driver for a container, the log system must be configured properly
            on the container instance (or on a different log server for remote logging options).
            For more information on the options for different supported log drivers, see <a href="https://docs.docker.com/engine/admin/logging/overview/">Configure
            logging drivers</a> in the Docker documentation.
            </para>
             <note> 
            <para>
            Amazon ECS currently supports a subset of the logging drivers available to the Docker
            daemon (shown in the <a>LogConfiguration</a> data type). Additional log drivers may
            be available in future releases of the Amazon ECS container agent.
            </para>
             </note> 
            <para>
            This parameter requires version 1.18 of the Docker Remote API or greater on your container
            instance. To check the Docker Remote API version on your container instance, log into
            your container instance and run the following command: <code>sudo docker version |
            grep "Server API version"</code> 
            </para>
             <note> 
            <para>
            The Amazon ECS container agent running on a container instance must register the logging
            drivers available on that instance with the <code>ECS_AVAILABLE_LOGGING_DRIVERS</code>
            environment variable before containers placed on that instance can use these log configuration
            options. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS Container Agent Configuration</a> in the <i>Amazon EC2 Container Service Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            The hard limit (in MiB) of memory to present to the container. If your container attempts
            to exceed the memory specified here, the container is killed. This parameter maps
            to <code>Memory</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>--memory</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
             
            <para>
            You must specify a non-zero integer for one or both of <code>memory</code> or <code>memoryReservation</code>
            in container definitions. If you specify both, <code>memory</code> must be greater
            than <code>memoryReservation</code>. If you specify <code>memoryReservation</code>,
            then that value is subtracted from the available memory resources for the container
            instance on which the container is placed; otherwise, the value of <code>memory</code>
            is used.
            </para>
             
            <para>
            The Docker daemon reserves a minimum of 4 MiB of memory for a container, so you should
            not specify fewer than 4 MiB of memory for your containers. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.MemoryReservation">
            <summary>
            Gets and sets the property MemoryReservation. 
            <para>
            The soft limit (in MiB) of memory to reserve for the container. When system memory
            is under heavy contention, Docker attempts to keep the container memory to this soft
            limit; however, your container can consume more memory when it needs to, up to either
            the hard limit specified with the <code>memory</code> parameter (if applicable), or
            all of the available memory on the container instance, whichever comes first. This
            parameter maps to <code>MemoryReservation</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>--memory-reservation</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
             
            <para>
            You must specify a non-zero integer for one or both of <code>memory</code> or <code>memoryReservation</code>
            in container definitions. If you specify both, <code>memory</code> must be greater
            than <code>memoryReservation</code>. If you specify <code>memoryReservation</code>,
            then that value is subtracted from the available memory resources for the container
            instance on which the container is placed; otherwise, the value of <code>memory</code>
            is used.
            </para>
             
            <para>
            For example, if your container normally uses 128 MiB of memory, but occasionally bursts
            to 256 MiB of memory for short periods of time, you can set a <code>memoryReservation</code>
            of 128 MiB, and a <code>memory</code> hard limit of 300 MiB. This configuration would
            allow the container to only reserve 128 MiB of memory from the remaining resources
            on the container instance, but also allow the container to consume more memory resources
            when needed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.MountPoints">
            <summary>
            Gets and sets the property MountPoints. 
            <para>
            The mount points for data volumes in your container. This parameter maps to <code>Volumes</code>
            in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>--volume</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of a container. If you are linking multiple containers together in a task
            definition, the <code>name</code> of one container can be entered in the <code>links</code>
            of another container to connect the containers. Up to 255 letters (uppercase and lowercase),
            numbers, hyphens, and underscores are allowed. This parameter maps to <code>name</code>
            in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>--name</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.PortMappings">
            <summary>
            Gets and sets the property PortMappings. 
            <para>
            The list of port mappings for the container. Port mappings allow containers to access
            ports on the host container instance to send or receive traffic. This parameter maps
            to <code>PortBindings</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>--publish</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>. If the network mode of a task definition is set to <code>none</code>, then
            you cannot specify port mappings. If the network mode of a task definition is set
            to <code>host</code>, then host ports must either be undefined or they must match
            the container port in the port mapping.
            </para>
             <note> 
            <para>
            After a task reaches the <code>RUNNING</code> status, manual and automatic host and
            container port assignments are visible in the <b>Network Bindings</b> section of a
            container description of a selected task in the Amazon ECS console, or the <code>networkBindings</code>
            section <a>DescribeTasks</a> responses.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Privileged">
            <summary>
            Gets and sets the property Privileged. 
            <para>
            When this parameter is true, the container is given elevated privileges on the host
            container instance (similar to the <code>root</code> user). This parameter maps to
            <code>Privileged</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>--privileged</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.ReadonlyRootFilesystem">
            <summary>
            Gets and sets the property ReadonlyRootFilesystem. 
            <para>
            When this parameter is true, the container is given read-only access to its root file
            system. This parameter maps to <code>ReadonlyRootfs</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>--read-only</code> option to <code>docker run</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.Ulimits">
            <summary>
            Gets and sets the property Ulimits. 
            <para>
            A list of <code>ulimits</code> to set in the container. This parameter maps to <code>Ulimits</code>
            in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>--ulimit</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>. Valid naming values are displayed in the <a>Ulimit</a> data type. This parameter
            requires version 1.18 of the Docker Remote API or greater on your container instance.
            To check the Docker Remote API version on your container instance, log into your container
            instance and run the following command: <code>sudo docker version | grep "Server API
            version"</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.User">
            <summary>
            Gets and sets the property User. 
            <para>
            The user name to use inside the container. This parameter maps to <code>User</code>
            in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>--user</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.VolumesFrom">
            <summary>
            Gets and sets the property VolumesFrom. 
            <para>
            Data volumes to mount from another container. This parameter maps to <code>VolumesFrom</code>
            in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>--volumes-from</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerDefinition.WorkingDirectory">
            <summary>
            Gets and sets the property WorkingDirectory. 
            <para>
            The working directory in which to run commands inside the container. This parameter
            maps to <code>WorkingDir</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create
            a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker
            Remote API</a> and the <code>--workdir</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
            run</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ContainerInstance">
            <summary>
            An EC2 instance that is running the Amazon ECS agent and has been registered with
            a cluster.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.AgentConnected">
            <summary>
            Gets and sets the property AgentConnected. 
            <para>
            This parameter returns <code>true</code> if the agent is actually connected to Amazon
            ECS. Registered instances with an agent that may be unhealthy or stopped return <code>false</code>,
            and instances without a connected agent cannot accept placement requests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.AgentUpdateStatus">
            <summary>
            Gets and sets the property AgentUpdateStatus. 
            <para>
            The status of the most recent agent update. If an update has never been requested,
            this value is <code>NULL</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            The attributes set for the container instance, either by the Amazon ECS container
            agent at instance registration or manually with the <a>PutAttributes</a> operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.ContainerInstanceArn">
            <summary>
            Gets and sets the property ContainerInstanceArn. 
            <para>
            The Amazon Resource Name (ARN) of the container instance. The ARN contains the <code>arn:aws:ecs</code>
            namespace, followed by the region of the container instance, the AWS account ID of
            the container instance owner, the <code>container-instance</code> namespace, and then
            the container instance ID. For example, <code>arn:aws:ecs:<i>region</i>:<i>aws_account_id</i>:container-instance/<i>container_instance_ID</i>
            </code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.Ec2InstanceId">
            <summary>
            Gets and sets the property Ec2InstanceId. 
            <para>
            The EC2 instance ID of the container instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.PendingTasksCount">
            <summary>
            Gets and sets the property PendingTasksCount. 
            <para>
            The number of tasks on the container instance that are in the <code>PENDING</code>
            status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.RegisteredAt">
            <summary>
            Gets and sets the property RegisteredAt. 
            <para>
            The Unix timestamp for when the container instance was registered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.RegisteredResources">
            <summary>
            Gets and sets the property RegisteredResources. 
            <para>
            For most resource types, this parameter describes the registered resources on the
            container instance that are in use by current tasks. For port resource types, this
            parameter describes the ports that were reserved by the Amazon ECS container agent
            when it registered the container instance with Amazon ECS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.RemainingResources">
            <summary>
            Gets and sets the property RemainingResources. 
            <para>
            For most resource types, this parameter describes the remaining resources of the container
            instance that are available for new tasks. For port resource types, this parameter
            describes the ports that are reserved by the Amazon ECS container agent and any containers
            that have reserved port mappings; any port that is not specified here is available
            for new tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.RunningTasksCount">
            <summary>
            Gets and sets the property RunningTasksCount. 
            <para>
            The number of tasks on the container instance that are in the <code>RUNNING</code>
            status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the container instance. The valid values are <code>ACTIVE</code>, <code>INACTIVE</code>,
            or <code>DRAINING</code>. <code>ACTIVE</code> indicates that the container instance
            can accept tasks. <code>DRAINING</code> indicates that new tasks are not placed on
            the container instance and any service tasks running on the container instance are
            removed if possible. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/container-instance-draining.html">Container
            Instance Draining</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version counter for the container instance. Every time a container instance experiences
            a change that triggers a CloudWatch event, the version counter is incremented. If
            you are replicating your Amazon ECS container instance state with CloudWatch events,
            you can compare the version of a container instance reported by the Amazon ECS APIs
            with the version reported in CloudWatch events for the container instance (inside
            the <code>detail</code> object) to verify that the version in your event stream is
            current.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerInstance.VersionInfo">
            <summary>
            Gets and sets the property VersionInfo. 
            <para>
            The version information for the Amazon ECS container agent and Docker daemon running
            on the container instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ContainerOverride">
            <summary>
            The overrides that should be sent to a container.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerOverride.Command">
            <summary>
            Gets and sets the property Command. 
            <para>
            The command to send to the container that overrides the default command from the Docker
            image or the task definition. You must also specify a container name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerOverride.Environment">
            <summary>
            Gets and sets the property Environment. 
            <para>
            The environment variables to send to the container. You can add new environment variables,
            which are added to the container at launch, or you can override the existing environment
            variables from the Docker image or the task definition. You must also specify a container
            name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ContainerOverride.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the container that receives the override. This parameter is required if
            a command or environment variable is specified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CreateClusterRequest">
            <summary>
            Container for the parameters to the CreateCluster operation.
            Creates a new Amazon ECS cluster. By default, your account receives a <code>default</code>
            cluster when you launch your first container instance. However, you can create your
            own cluster with a unique name with the <code>CreateCluster</code> action.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateClusterRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of your cluster. If you do not specify a name for your cluster, you create
            a cluster named <code>default</code>. Up to 255 letters (uppercase and lowercase),
            numbers, hyphens, and underscores are allowed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CreateClusterResponse">
            <summary>
            This is the response object from the CreateCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateClusterResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The full description of your new cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CreateServiceRequest">
            <summary>
            Container for the parameters to the CreateService operation.
            Runs and maintains a desired number of tasks from a specified task definition. If
            the number of tasks running in a service drops below <code>desiredCount</code>, Amazon
            ECS spawns another copy of the task in the specified cluster. To update an existing
            service, see <a>UpdateService</a>.
            
             
            <para>
            In addition to maintaining the desired count of tasks in your service, you can optionally
            run your service behind a load balancer. The load balancer distributes traffic across
            the tasks that are associated with the service. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-load-balancing.html">Service
            Load Balancing</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </para>
             
            <para>
            You can optionally specify a deployment configuration for your service. During a deployment
            (which is triggered by changing the task definition or the desired count of a service
            with an <a>UpdateService</a> operation), the service scheduler uses the <code>minimumHealthyPercent</code>
            and <code>maximumPercent</code> parameters to determine the deployment strategy.
            </para>
             
            <para>
            The <code>minimumHealthyPercent</code> represents a lower limit on the number of your
            service's tasks that must remain in the <code>RUNNING</code> state during a deployment,
            as a percentage of the <code>desiredCount</code> (rounded up to the nearest integer).
            This parameter enables you to deploy without using additional cluster capacity. For
            example, if your service has a <code>desiredCount</code> of four tasks and a <code>minimumHealthyPercent</code>
            of 50%, the scheduler can stop two existing tasks to free up cluster capacity before
            starting two new tasks. Tasks for services that <i>do not</i> use a load balancer
            are considered healthy if they are in the <code>RUNNING</code> state. Tasks for services
            that <i>do</i> use a load balancer are considered healthy if they are in the <code>RUNNING</code>
            state and the container instance they are hosted on is reported as healthy by the
            load balancer. The default value for <code>minimumHealthyPercent</code> is 50% in
            the console and 100% for the AWS CLI, the AWS SDKs, and the APIs.
            </para>
             
            <para>
            The <code>maximumPercent</code> parameter represents an upper limit on the number
            of your service's tasks that are allowed in the <code>RUNNING</code> or <code>PENDING</code>
            state during a deployment, as a percentage of the <code>desiredCount</code> (rounded
            down to the nearest integer). This parameter enables you to define the deployment
            batch size. For example, if your service has a <code>desiredCount</code> of four tasks
            and a <code>maximumPercent</code> value of 200%, the scheduler can start four new
            tasks before stopping the four older tasks (provided that the cluster resources required
            to do this are available). The default value for <code>maximumPercent</code> is 200%.
            </para>
             
            <para>
            When the service scheduler launches new tasks, it determines task placement in your
            cluster using the following logic:
            </para>
             <ul> <li> 
            <para>
            Determine which of the container instances in your cluster can support your service's
            task definition (for example, they have the required CPU, memory, ports, and container
            instance attributes).
            </para>
             </li> <li> 
            <para>
            By default, the service scheduler attempts to balance tasks across Availability Zones
            in this manner (although you can choose a different placement strategy) with the <code>placementStrategy</code>
            parameter):
            </para>
             <ul> <li> 
            <para>
            Sort the valid container instances by the fewest number of running tasks for this
            service in the same Availability Zone as the instance. For example, if zone A has
            one running service task and zones B and C each have zero, valid container instances
            in either zone B or C are considered optimal for placement.
            </para>
             </li> <li> 
            <para>
            Place the new service task on a valid container instance in an optimal Availability
            Zone (based on the previous steps), favoring container instances with the fewest number
            of running tasks for this service.
            </para>
             </li> </ul> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.ClientToken">
            <summary>
            Gets and sets the property ClientToken. 
            <para>
            Unique, case-sensitive identifier you provide to ensure the idempotency of the request.
            Up to 32 ASCII characters are allowed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster on which to run your
            service. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.DeploymentConfiguration">
            <summary>
            Gets and sets the property DeploymentConfiguration. 
            <para>
            Optional deployment parameters that control how many tasks run during the deployment
            and the ordering of stopping and starting tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.DesiredCount">
            <summary>
            Gets and sets the property DesiredCount. 
            <para>
            The number of instantiations of the specified task definition to place and keep running
            on your cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.LoadBalancers">
            <summary>
            Gets and sets the property LoadBalancers. 
            <para>
            A load balancer object representing the load balancer to use with your service. Currently,
            you are limited to one load balancer or target group per service. After you create
            a service, the load balancer name or target group ARN, container name, and container
            port specified in the service definition are immutable.
            </para>
             
            <para>
            For Elastic Load Balancing Classic load balancers, this object must contain the load
            balancer name, the container name (as it appears in a container definition), and the
            container port to access from the load balancer. When a task from this service is
            placed on a container instance, the container instance is registered with the load
            balancer specified here.
            </para>
             
            <para>
            For Elastic Load Balancing Application load balancers, this object must contain the
            load balancer target group ARN, the container name (as it appears in a container definition),
            and the container port to access from the load balancer. When a task from this service
            is placed on a container instance, the container instance and port combination is
            registered as a target in the target group specified here.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.PlacementConstraints">
            <summary>
            Gets and sets the property PlacementConstraints. 
            <para>
            An array of placement constraint objects to use for tasks in your service. You can
            specify a maximum of 10 constraints per task (this limit includes constraints in the
            task definition and those specified at run time). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.PlacementStrategy">
            <summary>
            Gets and sets the property PlacementStrategy. 
            <para>
            The placement strategy objects to use for tasks in your service. You can specify a
            maximum of 5 strategy rules per service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.Role">
            <summary>
            Gets and sets the property Role. 
            <para>
            The name or full Amazon Resource Name (ARN) of the IAM role that allows Amazon ECS
            to make calls to your load balancer on your behalf. This parameter is required if
            you are using a load balancer with your service. If you specify the <code>role</code>
            parameter, you must also specify a load balancer object with the <code>loadBalancers</code>
            parameter.
            </para>
             
            <para>
            If your specified role has a path other than <code>/</code>, then you must either
            specify the full role ARN (this is recommended) or prefix the role name with the path.
            For example, if a role with the name <code>bar</code> has a path of <code>/foo/</code>
            then you would specify <code>/foo/bar</code> as the role name. For more information,
            see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names">Friendly
            Names and Paths</a> in the <i>IAM User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.ServiceName">
            <summary>
            Gets and sets the property ServiceName. 
            <para>
            The name of your service. Up to 255 letters (uppercase and lowercase), numbers, hyphens,
            and underscores are allowed. Service names must be unique within a cluster, but you
            can have similarly named services in multiple clusters within a region or across multiple
            regions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceRequest.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The <code>family</code> and <code>revision</code> (<code>family:revision</code>) or
            full Amazon Resource Name (ARN) of the task definition to run in your service. If
            a <code>revision</code> is not specified, the latest <code>ACTIVE</code> revision
            is used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.CreateServiceResponse">
            <summary>
            This is the response object from the CreateService operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.CreateServiceResponse.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The full description of your service following the create call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteAttributesRequest">
            <summary>
            Container for the parameters to the DeleteAttributes operation.
            Deletes one or more custom attributes from an Amazon ECS resource.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteAttributesRequest.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            The attributes to delete from your resource. You can specify up to 10 attributes per
            request. For custom attributes, specify the attribute name and target ID, but do not
            specify the value. If you specify the target ID using the short form, you must also
            specify the target type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteAttributesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that contains the
            resource to delete attributes. If you do not specify a cluster, the default cluster
            is assumed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteAttributesResponse">
            <summary>
            This is the response object from the DeleteAttributes operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteAttributesResponse.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A list of attribute objects that were successfully deleted from your resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteClusterRequest">
            <summary>
            Container for the parameters to the DeleteCluster operation.
            Deletes the specified cluster. You must deregister all container instances from this
            cluster before you may delete it. You can list the container instances in a cluster
            with <a>ListContainerInstances</a> and deregister them with <a>DeregisterContainerInstance</a>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteClusterRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteClusterResponse">
            <summary>
            This is the response object from the DeleteCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteClusterResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The full description of the deleted cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteServiceRequest">
            <summary>
            Container for the parameters to the DeleteService operation.
            Deletes a specified service within a cluster. You can delete a service if you have
            no running tasks in it and the desired task count is zero. If the service is actively
            maintaining tasks, you cannot delete it, and you must update the service to a desired
            task count of zero. For more information, see <a>UpdateService</a>.
            
             <note> 
            <para>
            When you delete a service, if there are still running tasks that require cleanup,
            the service status moves from <code>ACTIVE</code> to <code>DRAINING</code>, and the
            service is no longer visible in the console or in <a>ListServices</a> API operations.
            After the tasks have stopped, then the service status moves from <code>DRAINING</code>
            to <code>INACTIVE</code>. Services in the <code>DRAINING</code> or <code>INACTIVE</code>
            status can still be viewed with <a>DescribeServices</a> API operations; however, in
            the future, <code>INACTIVE</code> services may be cleaned up and purged from Amazon
            ECS record keeping, and <a>DescribeServices</a> API operations on those services will
            return a <code>ServiceNotFoundException</code> error.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteServiceRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service
            to delete. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteServiceRequest.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The name of the service to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeleteServiceResponse">
            <summary>
            This is the response object from the DeleteService operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeleteServiceResponse.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The full description of the deleted service.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Deployment">
            <summary>
            The details of an Amazon ECS service deployment.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix timestamp for when the service was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.DesiredCount">
            <summary>
            Gets and sets the property DesiredCount. 
            <para>
            The most recent desired count of tasks that was specified for the service to deploy
            or maintain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID of the deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.PendingCount">
            <summary>
            Gets and sets the property PendingCount. 
            <para>
            The number of tasks in the deployment that are in the <code>PENDING</code> status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.RunningCount">
            <summary>
            Gets and sets the property RunningCount. 
            <para>
            The number of tasks in the deployment that are in the <code>RUNNING</code> status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the deployment. Valid values are <code>PRIMARY</code> (for the most
            recent deployment), <code>ACTIVE</code> (for previous deployments that still have
            tasks running, but are being replaced with the <code>PRIMARY</code> deployment), and
            <code>INACTIVE</code> (for deployments that have been completely replaced).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The most recent task definition that was specified for the service to use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Deployment.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
            The Unix timestamp for when the service was last updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeploymentConfiguration">
            <summary>
            Optional deployment parameters that control how many tasks run during the deployment
            and the ordering of stopping and starting tasks.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeploymentConfiguration.MaximumPercent">
            <summary>
            Gets and sets the property MaximumPercent. 
            <para>
            The upper limit (as a percentage of the service's <code>desiredCount</code>) of the
            number of tasks that are allowed in the <code>RUNNING</code> or <code>PENDING</code>
            state in a service during a deployment. The maximum number of tasks during a deployment
            is the <code>desiredCount</code> multiplied by <code>maximumPercent</code>/100, rounded
            down to the nearest integer value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeploymentConfiguration.MinimumHealthyPercent">
            <summary>
            Gets and sets the property MinimumHealthyPercent. 
            <para>
            The lower limit (as a percentage of the service's <code>desiredCount</code>) of the
            number of running tasks that must remain in the <code>RUNNING</code> state in a service
            during a deployment. The minimum healthy tasks during a deployment is the <code>desiredCount</code>
            multiplied by <code>minimumHealthyPercent</code>/100, rounded up to the nearest integer
            value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeregisterContainerInstanceRequest">
            <summary>
            Container for the parameters to the DeregisterContainerInstance operation.
            Deregisters an Amazon ECS container instance from the specified cluster. This instance
            is no longer available to run tasks.
            
             
            <para>
            If you intend to use the container instance for some other purpose after deregistration,
            you should stop all of the tasks running on the container instance before deregistration
            to avoid any orphaned tasks from consuming resources.
            </para>
             
            <para>
            Deregistering a container instance removes the instance from a cluster, but it does
            not terminate the EC2 instance; if you are finished using the instance, be sure to
            terminate it in the Amazon EC2 console to stop billing.
            </para>
             <note> 
            <para>
            If you terminate a running container instance, Amazon ECS automatically deregisters
            the instance from your cluster (stopped container instances or instances with disconnected
            agents are not automatically deregistered when terminated).
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeregisterContainerInstanceRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container
            instance to deregister. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeregisterContainerInstanceRequest.ContainerInstance">
            <summary>
            Gets and sets the property ContainerInstance. 
            <para>
            The container instance ID or full Amazon Resource Name (ARN) of the container instance
            to deregister. The ARN contains the <code>arn:aws:ecs</code> namespace, followed by
            the region of the container instance, the AWS account ID of the container instance
            owner, the <code>container-instance</code> namespace, and then the container instance
            ID. For example, <code>arn:aws:ecs:<i>region</i>:<i>aws_account_id</i>:container-instance/<i>container_instance_ID</i>
            </code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeregisterContainerInstanceRequest.Force">
            <summary>
            Gets and sets the property Force. 
            <para>
            Forces the deregistration of the container instance. If you have tasks running on
            the container instance when you deregister it with the <code>force</code> option,
            these tasks remain running until you terminate the instance or the tasks stop through
            some other means, but they are orphaned (no longer monitored or accounted for by Amazon
            ECS). If an orphaned task on your container instance is part of an Amazon ECS service,
            then the service scheduler starts another copy of that task, on a different container
            instance if possible. 
            </para>
             
            <para>
            Any containers in orphaned service tasks that are registered with a Classic load balancer
            or an Application load balancer target group are deregistered, and they will begin
            connection draining according to the settings on the load balancer or target group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeregisterContainerInstanceResponse">
            <summary>
            This is the response object from the DeregisterContainerInstance operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeregisterContainerInstanceResponse.ContainerInstance">
            <summary>
            Gets and sets the property ContainerInstance. 
            <para>
            The container instance that was deregistered.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeregisterTaskDefinitionRequest">
            <summary>
            Container for the parameters to the DeregisterTaskDefinition operation.
            Deregisters the specified task definition by family and revision. Upon deregistration,
            the task definition is marked as <code>INACTIVE</code>. Existing tasks and services
            that reference an <code>INACTIVE</code> task definition continue to run without disruption.
            Existing services that reference an <code>INACTIVE</code> task definition can still
            scale up or down by modifying the service's desired count.
            
             
            <para>
            You cannot use an <code>INACTIVE</code> task definition to run new tasks or create
            new services, and you cannot update an existing service to reference an <code>INACTIVE</code>
            task definition (although there may be up to a 10 minute window following deregistration
            where these restrictions have not yet taken effect).
            </para>
             <note> 
            <para>
            At this time, <code>INACTIVE</code> task definitions remain discoverable in your account
            indefinitely; however, this behavior is subject to change in the future, so you should
            not rely on <code>INACTIVE</code> task definitions persisting beyond the life cycle
            of any associated tasks and services.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeregisterTaskDefinitionRequest.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The <code>family</code> and <code>revision</code> (<code>family:revision</code>) or
            full Amazon Resource Name (ARN) of the task definition to deregister. You must specify
            a <code>revision</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DeregisterTaskDefinitionResponse">
            <summary>
            This is the response object from the DeregisterTaskDefinition operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DeregisterTaskDefinitionResponse.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The full description of the deregistered task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeClustersRequest">
            <summary>
            Container for the parameters to the DescribeClusters operation.
            Describes one or more of your clusters.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeClustersRequest.Clusters">
            <summary>
            Gets and sets the property Clusters. 
            <para>
            A list of up to 100 cluster names or full cluster Amazon Resource Name (ARN) entries.
            If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeClustersResponse">
            <summary>
            This is the response object from the DescribeClusters operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeClustersResponse.Clusters">
            <summary>
            Gets and sets the property Clusters. 
            <para>
            The list of clusters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeClustersResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeContainerInstancesRequest">
            <summary>
            Container for the parameters to the DescribeContainerInstances operation.
            Describes Amazon EC2 Container Service container instances. Returns metadata about
            registered and remaining resources on each container instance requested.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeContainerInstancesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container
            instances to describe. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeContainerInstancesRequest.ContainerInstances">
            <summary>
            Gets and sets the property ContainerInstances. 
            <para>
            A list of container instance IDs or full Amazon Resource Name (ARN) entries.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeContainerInstancesResponse">
            <summary>
            This is the response object from the DescribeContainerInstances operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeContainerInstancesResponse.ContainerInstances">
            <summary>
            Gets and sets the property ContainerInstances. 
            <para>
            The list of container instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeContainerInstancesResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeServicesRequest">
            <summary>
            Container for the parameters to the DescribeServices operation.
            Describes the specified services running in your cluster.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeServicesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN)the cluster that hosts the service
            to describe. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeServicesRequest.Services">
            <summary>
            Gets and sets the property Services. 
            <para>
            A list of services to describe. You may specify up to 10 services to describe in a
            single operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeServicesResponse">
            <summary>
            This is the response object from the DescribeServices operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeServicesResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeServicesResponse.Services">
            <summary>
            Gets and sets the property Services. 
            <para>
            The list of services described.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeTaskDefinitionRequest">
            <summary>
            Container for the parameters to the DescribeTaskDefinition operation.
            Describes a task definition. You can specify a <code>family</code> and <code>revision</code>
            to find information about a specific task definition, or you can simply specify the
            family to find the latest <code>ACTIVE</code> revision in that family.
            
             <note> 
            <para>
            You can only describe <code>INACTIVE</code> task definitions while an active task
            or service references them.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTaskDefinitionRequest.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The <code>family</code> for the latest <code>ACTIVE</code> revision, <code>family</code>
            and <code>revision</code> (<code>family:revision</code>) for a specific revision in
            the family, or full Amazon Resource Name (ARN) of the task definition to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeTaskDefinitionResponse">
            <summary>
            This is the response object from the DescribeTaskDefinition operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTaskDefinitionResponse.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The full task definition description.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeTasksRequest">
            <summary>
            Container for the parameters to the DescribeTasks operation.
            Describes a specified task or tasks.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTasksRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the task
            to describe. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTasksRequest.Tasks">
            <summary>
            Gets and sets the property Tasks. 
            <para>
            A list of up to 100 task IDs or full Amazon Resource Name (ARN) entries.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.DescribeTasksResponse">
            <summary>
            This is the response object from the DescribeTasks operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTasksResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.DescribeTasksResponse.Tasks">
            <summary>
            Gets and sets the property Tasks. 
            <para>
            The list of tasks.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Failure">
            <summary>
            A failed resource.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Failure.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the failed resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Failure.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            The reason for the failure.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.HostEntry">
            <summary>
            Hostnames and IP address entries that are added to the <code>/etc/hosts</code> file
            of a container via the <code>extraHosts</code> parameter of its <a>ContainerDefinition</a>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.HostEntry.Hostname">
            <summary>
            Gets and sets the property Hostname. 
            <para>
            The hostname to use in the <code>/etc/hosts</code> entry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.HostEntry.IpAddress">
            <summary>
            Gets and sets the property IpAddress. 
            <para>
            The IP address to use in the <code>/etc/hosts</code> entry.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.HostVolumeProperties">
            <summary>
            Details on a container instance host volume.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.HostVolumeProperties.SourcePath">
            <summary>
            Gets and sets the property SourcePath. 
            <para>
            The path on the host container instance that is presented to the container. If this
            parameter is empty, then the Docker daemon has assigned a host path for you. If the
            <code>host</code> parameter contains a <code>sourcePath</code> file location, then
            the data volume persists at the specified location on the host container instance
            until you delete it manually. If the <code>sourcePath</code> value does not exist
            on the host container instance, the Docker daemon creates it. If the location does
            exist, the contents of the source path folder are exported.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.InvalidParameterException">
            <summary>
             ECS exception
             </summary>
        </member>
        <member name="M:Amazon.ECS.Model.InvalidParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.InvalidParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.InvalidParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.InvalidParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.InvalidParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.InvalidParameterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidParameterException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.KeyValuePair">
            <summary>
            A key and value pair object.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.KeyValuePair.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the key value pair. For environment variables, this is the name of the
            environment variable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.KeyValuePair.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the key value pair. For environment variables, this is the value of the
            environment variable.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListAttributesRequest">
            <summary>
            Container for the parameters to the ListAttributes operation.
            Lists the attributes for Amazon ECS resources within a specified target type and cluster.
            When you specify a target type and cluster, <code>ListAttributes</code> returns a
            list of attribute objects, one for each attribute on each resource. You can filter
            the list of results to a single attribute name to only return results that have that
            name. You can also filter the results by attribute name and value, for example, to
            see which container instances in a cluster are running a Linux AMI (<code>ecs.os-type=linux</code>).
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesRequest.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The name of the attribute with which to filter the results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesRequest.AttributeValue">
            <summary>
            Gets and sets the property AttributeValue. 
            <para>
            The value of the attribute with which to filter results. You must also specify an
            attribute name to use this parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster to list attributes.
            If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of cluster results returned by <code>ListAttributes</code> in paginated
            output. When this parameter is used, <code>ListAttributes</code> only returns <code>maxResults</code>
            results in a single page along with a <code>nextToken</code> response element. The
            remaining results of the initial request can be seen by sending another <code>ListAttributes</code>
            request with the returned <code>nextToken</code> value. This value can be between
            1 and 100. If this parameter is not used, then <code>ListAttributes</code> returns
            up to 100 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>ListAttributes</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value. This value is <code>null</code> when there
            are no more results to return.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesRequest.TargetType">
            <summary>
            Gets and sets the property TargetType. 
            <para>
            The type of the target with which to list attributes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListAttributesResponse">
            <summary>
            This is the response object from the ListAttributes operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesResponse.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A list of attribute objects that meet the criteria of the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListAttributesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListAttributes</code>
            request. When the results of a <code>ListAttributes</code> request exceed <code>maxResults</code>,
            this value can be used to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListClustersRequest">
            <summary>
            Container for the parameters to the ListClusters operation.
            Returns a list of existing clusters.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListClustersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of cluster results returned by <code>ListClusters</code> in paginated
            output. When this parameter is used, <code>ListClusters</code> only returns <code>maxResults</code>
            results in a single page along with a <code>nextToken</code> response element. The
            remaining results of the initial request can be seen by sending another <code>ListClusters</code>
            request with the returned <code>nextToken</code> value. This value can be between
            1 and 100. If this parameter is not used, then <code>ListClusters</code> returns up
            to 100 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListClustersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>ListClusters</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value. This value is <code>null</code> when there
            are no more results to return.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListClustersResponse">
            <summary>
            This is the response object from the ListClusters operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListClustersResponse.ClusterArns">
            <summary>
            Gets and sets the property ClusterArns. 
            <para>
            The list of full Amazon Resource Name (ARN) entries for each cluster associated with
            your account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListClustersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListClusters</code>
            request. When the results of a <code>ListClusters</code> request exceed <code>maxResults</code>,
            this value can be used to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListContainerInstancesRequest">
            <summary>
            Container for the parameters to the ListContainerInstances operation.
            Returns a list of container instances in a specified cluster. You can filter the results
            of a <code>ListContainerInstances</code> operation with cluster query language statements
            inside the <code>filter</code> parameter. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
            Query Language</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container
            instances to list. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesRequest.Filter">
            <summary>
            Gets and sets the property Filter. 
            <para>
            You can filter the results of a <code>ListContainerInstances</code> operation with
            cluster query language statements. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
            Query Language</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of container instance results returned by <code>ListContainerInstances</code>
            in paginated output. When this parameter is used, <code>ListContainerInstances</code>
            only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. The remaining results of the initial request can be seen by sending
            another <code>ListContainerInstances</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 100. If this parameter is not used, then <code>ListContainerInstances</code>
            returns up to 100 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>ListContainerInstances</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value. This value is <code>null</code> when there
            are no more results to return.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Filters the container instances by status. For example, if you specify the <code>DRAINING</code>
            status, the results include only container instances that have been set to <code>DRAINING</code>
            using <a>UpdateContainerInstancesState</a>. If you do not specify this parameter,
            the default is to include container instances set to <code>ACTIVE</code> and <code>DRAINING</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListContainerInstancesResponse">
            <summary>
            This is the response object from the ListContainerInstances operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesResponse.ContainerInstanceArns">
            <summary>
            Gets and sets the property ContainerInstanceArns. 
            <para>
            The list of container instances with full Amazon Resource Name (ARN) entries for each
            container instance associated with the specified cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListContainerInstancesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListContainerInstances</code>
            request. When the results of a <code>ListContainerInstances</code> request exceed
            <code>maxResults</code>, this value can be used to retrieve the next page of results.
            This value is <code>null</code> when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListServicesRequest">
            <summary>
            Container for the parameters to the ListServices operation.
            Lists the services that are running in a specified cluster.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the services
            to list. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of container instance results returned by <code>ListServices</code>
            in paginated output. When this parameter is used, <code>ListServices</code> only returns
            <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. The remaining results of the initial request can be seen by sending
            another <code>ListServices</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 10. If this parameter is not used, then <code>ListServices</code>
            returns up to 10 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>ListServices</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value. This value is <code>null</code> when there
            are no more results to return.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListServicesResponse">
            <summary>
            This is the response object from the ListServices operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListServices</code>
            request. When the results of a <code>ListServices</code> request exceed <code>maxResults</code>,
            this value can be used to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListServicesResponse.ServiceArns">
            <summary>
            Gets and sets the property ServiceArns. 
            <para>
            The list of full Amazon Resource Name (ARN) entries for each service associated with
            the specified cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest">
            <summary>
            Container for the parameters to the ListTaskDefinitionFamilies operation.
            Returns a list of task definition families that are registered to your account (which
            may include task definition families that no longer have any <code>ACTIVE</code> task
            definition revisions).
            
             
            <para>
            You can filter out task definition families that do not contain any <code>ACTIVE</code>
            task definition revisions by setting the <code>status</code> parameter to <code>ACTIVE</code>.
            You can also filter the results with the <code>familyPrefix</code> parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest.FamilyPrefix">
            <summary>
            Gets and sets the property FamilyPrefix. 
            <para>
            The <code>familyPrefix</code> is a string that is used to filter the results of <code>ListTaskDefinitionFamilies</code>.
            If you specify a <code>familyPrefix</code>, only task definition family names that
            begin with the <code>familyPrefix</code> string are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of task definition family results returned by <code>ListTaskDefinitionFamilies</code>
            in paginated output. When this parameter is used, <code>ListTaskDefinitions</code>
            only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. The remaining results of the initial request can be seen by sending
            another <code>ListTaskDefinitionFamilies</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 100. If this parameter is not used, then <code>ListTaskDefinitionFamilies</code>
            returns up to 100 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>ListTaskDefinitionFamilies</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value. This value is <code>null</code> when there
            are no more results to return.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The task definition family status with which to filter the <code>ListTaskDefinitionFamilies</code>
            results. By default, both <code>ACTIVE</code> and <code>INACTIVE</code> task definition
            families are listed. If this parameter is set to <code>ACTIVE</code>, only task definition
            families that have an <code>ACTIVE</code> task definition revision are returned. If
            this parameter is set to <code>INACTIVE</code>, only task definition families that
            do not have any <code>ACTIVE</code> task definition revisions are returned. If you
            paginate the resulting output, be sure to keep the <code>status</code> value constant
            in each subsequent request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTaskDefinitionFamiliesResponse">
            <summary>
            This is the response object from the ListTaskDefinitionFamilies operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionFamiliesResponse.Families">
            <summary>
            Gets and sets the property Families. 
            <para>
            The list of task definition family names that match the <code>ListTaskDefinitionFamilies</code>
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionFamiliesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListTaskDefinitionFamilies</code>
            request. When the results of a <code>ListTaskDefinitionFamilies</code> request exceed
            <code>maxResults</code>, this value can be used to retrieve the next page of results.
            This value is <code>null</code> when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTaskDefinitionsRequest">
            <summary>
            Container for the parameters to the ListTaskDefinitions operation.
            Returns a list of task definitions that are registered to your account. You can filter
            the results by family name with the <code>familyPrefix</code> parameter or by status
            with the <code>status</code> parameter.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsRequest.FamilyPrefix">
            <summary>
            Gets and sets the property FamilyPrefix. 
            <para>
            The full family name with which to filter the <code>ListTaskDefinitions</code> results.
            Specifying a <code>familyPrefix</code> limits the listed task definitions to task
            definition revisions that belong to that family.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of task definition results returned by <code>ListTaskDefinitions</code>
            in paginated output. When this parameter is used, <code>ListTaskDefinitions</code>
            only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. The remaining results of the initial request can be seen by sending
            another <code>ListTaskDefinitions</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 100. If this parameter is not used, then <code>ListTaskDefinitions</code>
            returns up to 100 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>ListTaskDefinitions</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value. This value is <code>null</code> when there
            are no more results to return.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsRequest.Sort">
            <summary>
            Gets and sets the property Sort. 
            <para>
            The order in which to sort the results. Valid values are <code>ASC</code> and <code>DESC</code>.
            By default (<code>ASC</code>), task definitions are listed lexicographically by family
            name and in ascending numerical order by revision so that the newest task definitions
            in a family are listed last. Setting this parameter to <code>DESC</code> reverses
            the sort order on family name and revision so that the newest task definitions in
            a family are listed first.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The task definition status with which to filter the <code>ListTaskDefinitions</code>
            results. By default, only <code>ACTIVE</code> task definitions are listed. By setting
            this parameter to <code>INACTIVE</code>, you can view task definitions that are <code>INACTIVE</code>
            as long as an active task or service still references them. If you paginate the resulting
            output, be sure to keep the <code>status</code> value constant in each subsequent
            request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTaskDefinitionsResponse">
            <summary>
            This is the response object from the ListTaskDefinitions operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListTaskDefinitions</code>
            request. When the results of a <code>ListTaskDefinitions</code> request exceed <code>maxResults</code>,
            this value can be used to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTaskDefinitionsResponse.TaskDefinitionArns">
            <summary>
            Gets and sets the property TaskDefinitionArns. 
            <para>
            The list of task definition Amazon Resource Name (ARN) entries for the <code>ListTaskDefinitions</code>
            request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTasksRequest">
            <summary>
            Container for the parameters to the ListTasks operation.
            Returns a list of tasks for a specified cluster. You can filter the results by family
            name, by a particular container instance, or by the desired status of the task with
            the <code>family</code>, <code>containerInstance</code>, and <code>desiredStatus</code>
            parameters.
            
             
            <para>
            Recently-stopped tasks might appear in the returned results. Currently, stopped tasks
            appear in the returned results for at least one hour. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the tasks
            to list. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.ContainerInstance">
            <summary>
            Gets and sets the property ContainerInstance. 
            <para>
            The container instance ID or full Amazon Resource Name (ARN) of the container instance
            with which to filter the <code>ListTasks</code> results. Specifying a <code>containerInstance</code>
            limits the results to tasks that belong to that container instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.DesiredStatus">
            <summary>
            Gets and sets the property DesiredStatus. 
            <para>
            The task desired status with which to filter the <code>ListTasks</code> results. Specifying
            a <code>desiredStatus</code> of <code>STOPPED</code> limits the results to tasks that
            ECS has set the desired status to <code>STOPPED</code>, which can be useful for debugging
            tasks that are not starting properly or have died or finished. The default status
            filter is <code>RUNNING</code>, which shows tasks that ECS has set the desired status
            to <code>RUNNING</code>.
            </para>
             <note> 
            <para>
            Although you can filter results based on a desired status of <code>PENDING</code>,
            this will not return any results because ECS never sets the desired status of a task
            to that value (only a task's <code>lastStatus</code> may have a value of <code>PENDING</code>).
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.Family">
            <summary>
            Gets and sets the property Family. 
            <para>
            The name of the family with which to filter the <code>ListTasks</code> results. Specifying
            a <code>family</code> limits the results to tasks that belong to that family.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of task results returned by <code>ListTasks</code> in paginated
            output. When this parameter is used, <code>ListTasks</code> only returns <code>maxResults</code>
            results in a single page along with a <code>nextToken</code> response element. The
            remaining results of the initial request can be seen by sending another <code>ListTasks</code>
            request with the returned <code>nextToken</code> value. This value can be between
            1 and 100. If this parameter is not used, then <code>ListTasks</code> returns up to
            100 results and a <code>nextToken</code> value if applicable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value returned from a previous paginated <code>ListTasks</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value. This value is <code>null</code> when there
            are no more results to return.
            </para>
             <note> 
            <para>
            This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.ServiceName">
            <summary>
            Gets and sets the property ServiceName. 
            <para>
            The name of the service with which to filter the <code>ListTasks</code> results. Specifying
            a <code>serviceName</code> limits the results to tasks that belong to that service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksRequest.StartedBy">
            <summary>
            Gets and sets the property StartedBy. 
            <para>
            The <code>startedBy</code> value with which to filter the task results. Specifying
            a <code>startedBy</code> value limits the results to tasks that were started with
            that value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ListTasksResponse">
            <summary>
            This is the response object from the ListTasks operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <code>nextToken</code> value to include in a future <code>ListTasks</code> request.
            When the results of a <code>ListTasks</code> request exceed <code>maxResults</code>,
            this value can be used to retrieve the next page of results. This value is <code>null</code>
            when there are no more results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ListTasksResponse.TaskArns">
            <summary>
            Gets and sets the property TaskArns. 
            <para>
            The list of task Amazon Resource Name (ARN) entries for the <code>ListTasks</code>
            request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.LoadBalancer">
            <summary>
            Details on a load balancer that is used with a service.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LoadBalancer.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container (as it appears in a container definition) to associate with
            the load balancer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LoadBalancer.ContainerPort">
            <summary>
            Gets and sets the property ContainerPort. 
            <para>
            The port on the container to associate with the load balancer. This port must correspond
            to a <code>containerPort</code> in the service's task definition. Your container instances
            must allow ingress traffic on the <code>hostPort</code> of the port mapping.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LoadBalancer.LoadBalancerName">
            <summary>
            Gets and sets the property LoadBalancerName. 
            <para>
            The name of a Classic load balancer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LoadBalancer.TargetGroupArn">
            <summary>
            Gets and sets the property TargetGroupArn. 
            <para>
            The full Amazon Resource Name (ARN) of the Elastic Load Balancing target group associated
            with a service.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.LogConfiguration">
            <summary>
            Log configuration options to send to a custom log driver for the container.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LogConfiguration.LogDriver">
            <summary>
            Gets and sets the property LogDriver. 
            <para>
            The log driver to use for the container. The valid values listed for this parameter
            are log drivers that the Amazon ECS container agent can communicate with by default.
            
            </para>
             <note> 
            <para>
            If you have a custom driver that is not listed above that you would like to work with
            the Amazon ECS container agent, you can fork the Amazon ECS container agent project
            that is <a href="https://github.com/aws/amazon-ecs-agent">available on GitHub</a>
            and customize it to work with that driver. We encourage you to submit pull requests
            for changes that you would like to have included. However, Amazon Web Services does
            not currently provide support for running modified copies of this software.
            </para>
             </note> 
            <para>
            This parameter requires version 1.18 of the Docker Remote API or greater on your container
            instance. To check the Docker Remote API version on your container instance, log into
            your container instance and run the following command: <code>sudo docker version |
            grep "Server API version"</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.LogConfiguration.Options">
            <summary>
            Gets and sets the property Options. 
            <para>
            The configuration options to send to the log driver. This parameter requires version
            1.19 of the Docker Remote API or greater on your container instance. To check the
            Docker Remote API version on your container instance, log into your container instance
            and run the following command: <code>sudo docker version | grep "Server API version"</code>
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.MissingVersionException">
            <summary>
             ECS exception
             </summary>
        </member>
        <member name="M:Amazon.ECS.Model.MissingVersionException.#ctor(System.String)">
            <summary>
            Constructs a new MissingVersionException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.MissingVersionException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MissingVersionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.MissingVersionException.#ctor(System.Exception)">
            <summary>
            Construct instance of MissingVersionException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.MissingVersionException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MissingVersionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.MissingVersionException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MissingVersionException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.MissingVersionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the MissingVersionException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.MountPoint">
            <summary>
            Details on a volume mount point that is used in a container definition.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.MountPoint.ContainerPath">
            <summary>
            Gets and sets the property ContainerPath. 
            <para>
            The path on the container to mount the host volume at.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.MountPoint.ReadOnly">
            <summary>
            Gets and sets the property ReadOnly. 
            <para>
            If this value is <code>true</code>, the container has read-only access to the volume.
            If this value is <code>false</code>, then the container can write to the volume. The
            default value is <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.MountPoint.SourceVolume">
            <summary>
            Gets and sets the property SourceVolume. 
            <para>
            The name of the volume to mount.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.NetworkBinding">
            <summary>
            Details on the network bindings between a container and its host container instance.
            After a task reaches the <code>RUNNING</code> status, manual and automatic host and
            container port assignments are visible in the <code>networkBindings</code> section
            of <a>DescribeTasks</a> API responses.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.NetworkBinding.BindIP">
            <summary>
            Gets and sets the property BindIP. 
            <para>
            The IP address that the container is bound to on the container instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.NetworkBinding.ContainerPort">
            <summary>
            Gets and sets the property ContainerPort. 
            <para>
            The port number on the container that is be used with the network binding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.NetworkBinding.HostPort">
            <summary>
            Gets and sets the property HostPort. 
            <para>
            The port number on the host that is used with the network binding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.NetworkBinding.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
            The protocol used for the network binding.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.NoUpdateAvailableException">
            <summary>
             ECS exception
             </summary>
        </member>
        <member name="M:Amazon.ECS.Model.NoUpdateAvailableException.#ctor(System.String)">
            <summary>
            Constructs a new NoUpdateAvailableException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.NoUpdateAvailableException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NoUpdateAvailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.NoUpdateAvailableException.#ctor(System.Exception)">
            <summary>
            Construct instance of NoUpdateAvailableException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.NoUpdateAvailableException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NoUpdateAvailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.NoUpdateAvailableException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NoUpdateAvailableException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.NoUpdateAvailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the NoUpdateAvailableException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.PlacementConstraint">
            <summary>
            An object representing a constraint on task placement. For more information, see <a
            href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html">Task
            Placement Constraints</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PlacementConstraint.Expression">
            <summary>
            Gets and sets the property Expression. 
            <para>
            A cluster query language expression to apply to the constraint. Note you cannot specify
            an expression if the constraint type is <code>distinctInstance</code>. For more information,
            see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
            Query Language</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PlacementConstraint.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of constraint. Use <code>distinctInstance</code> to ensure that each task
            in a particular group is running on a different container instance. Use <code>memberOf</code>
            to restrict selection to a group of valid candidates. Note that <code>distinctInstance</code>
            is not supported in task definitions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PlacementStrategy">
            <summary>
            The task placement strategy for a task or service. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html">Task
            Placement Strategies</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PlacementStrategy.Field">
            <summary>
            Gets and sets the property Field. 
            <para>
            The field to apply the placement strategy against. For the <code>spread</code> placement
            strategy, valid values are <code>instanceId</code> (or <code>host</code>, which has
            the same effect), or any platform or custom attribute that is applied to a container
            instance, such as <code>attribute:ecs.availability-zone</code>. For the <code>binpack</code>
            placement strategy, valid values are <code>cpu</code> and <code>memory</code>. For
            the <code>random</code> placement strategy, this field is not used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PlacementStrategy.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of placement strategy. The <code>random</code> placement strategy randomly
            places tasks on available candidates. The <code>spread</code> placement strategy spreads
            placement across available candidates evenly based on the <code>field</code> parameter.
            The <code>binpack</code> strategy places tasks on available candidates that have the
            least available amount of the resource that is specified with the <code>field</code>
            parameter. For example, if you binpack on memory, a task is placed on the instance
            with the least amount of remaining memory (but still enough to run the task).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PortMapping">
            <summary>
            Port mappings allow containers to access ports on the host container instance to send
            or receive traffic. Port mappings are specified as part of the container definition.
            After a task reaches the <code>RUNNING</code> status, manual and automatic host and
            container port assignments are visible in the <code>networkBindings</code> section
            of <a>DescribeTasks</a> API responses.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PortMapping.ContainerPort">
            <summary>
            Gets and sets the property ContainerPort. 
            <para>
            The port number on the container that is bound to the user-specified or automatically
            assigned host port. If you specify a container port and not a host port, your container
            automatically receives a host port in the ephemeral port range (for more information,
            see <code>hostPort</code>). Port mappings that are automatically assigned in this
            way do not count toward the 100 reserved ports limit of a container instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PortMapping.HostPort">
            <summary>
            Gets and sets the property HostPort. 
            <para>
            The port number on the container instance to reserve for your container. You can specify
            a non-reserved host port for your container port mapping, or you can omit the <code>hostPort</code>
            (or set it to <code>0</code>) while specifying a <code>containerPort</code> and your
            container automatically receives a port in the ephemeral port range for your container
            instance operating system and Docker version.
            </para>
             
            <para>
            The default ephemeral port range is 49153 to 65535, and this range is used for Docker
            versions prior to 1.6.0. For Docker version 1.6.0 and later, the Docker daemon tries
            to read the ephemeral port range from <code>/proc/sys/net/ipv4/ip_local_port_range</code>;
            if this kernel parameter is unavailable, the default ephemeral port range is used.
            You should not attempt to specify a host port in the ephemeral port range, because
            these are reserved for automatic assignment. In general, ports below 32768 are outside
            of the ephemeral port range.
            </para>
             
            <para>
            The default reserved ports are 22 for SSH, the Docker ports 2375 and 2376, and the
            Amazon ECS container agent ports 51678 and 51679. Any host port that was previously
            specified in a running task is also reserved while the task is running (after a task
            stops, the host port is released).The current reserved ports are displayed in the
            <code>remainingResources</code> of <a>DescribeContainerInstances</a> output, and a
            container instance may have up to 100 reserved ports at a time, including the default
            reserved ports (automatically assigned ports do not count toward the 100 reserved
            ports limit).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PortMapping.Protocol">
            <summary>
            Gets and sets the property Protocol. 
            <para>
            The protocol used for the port mapping. Valid values are <code>tcp</code> and <code>udp</code>.
            The default is <code>tcp</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PutAttributesRequest">
            <summary>
            Container for the parameters to the PutAttributes operation.
            Create or update an attribute on an Amazon ECS resource. If the attribute does not
            exist, it is created. If the attribute exists, its value is replaced with the specified
            value. To delete an attribute, use <a>DeleteAttributes</a>. For more information,
            see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes">Attributes</a>
            in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAttributesRequest.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            The attributes to apply to your resource. You can specify up to 10 custom attributes
            per resource. You can specify up to 10 attributes in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAttributesRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that contains the
            resource to apply attributes. If you do not specify a cluster, the default cluster
            is assumed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.PutAttributesResponse">
            <summary>
            This is the response object from the PutAttributes operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.PutAttributesResponse.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            The attributes applied to your resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.RegisterTaskDefinitionRequest">
            <summary>
            Container for the parameters to the RegisterTaskDefinition operation.
            Registers a new task definition from the supplied <code>family</code> and <code>containerDefinitions</code>.
            Optionally, you can add data volumes to your containers with the <code>volumes</code>
            parameter. For more information about task definition parameters and defaults, see
            <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html">Amazon
            ECS Task Definitions</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            
             
            <para>
            You can specify an IAM role for your task with the <code>taskRoleArn</code> parameter.
            When you specify an IAM role for a task, its containers can then use the latest versions
            of the AWS CLI or SDKs to make API requests to the AWS services that are specified
            in the IAM policy associated with the role. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html">IAM
            Roles for Tasks</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </para>
             
            <para>
            You can specify a Docker networking mode for the containers in your task definition
            with the <code>networkMode</code> parameter. The available network modes correspond
            to those described in <a href="https://docs.docker.com/engine/reference/run/#/network-settings">Network
            settings</a> in the Docker run reference.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.ContainerDefinitions">
            <summary>
            Gets and sets the property ContainerDefinitions. 
            <para>
            A list of container definitions in JSON format that describe the different containers
            that make up your task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.Family">
            <summary>
            Gets and sets the property Family. 
            <para>
            You must specify a <code>family</code> for a task definition, which allows you to
            track multiple versions of the same task definition. The <code>family</code> is used
            as a name for your task definition. Up to 255 letters (uppercase and lowercase), numbers,
            hyphens, and underscores are allowed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.NetworkMode">
            <summary>
            Gets and sets the property NetworkMode. 
            <para>
            The Docker networking mode to use for the containers in the task. The valid values
            are <code>none</code>, <code>bridge</code>, and <code>host</code>. 
            </para>
             
            <para>
            The default Docker network mode is <code>bridge</code>. If the network mode is set
            to <code>none</code>, you cannot specify port mappings in your container definitions,
            and the task's containers do not have external connectivity. The <code>host</code>
            network mode offers the highest networking performance for containers because they
            use the host network stack instead of the virtualized network stack provided by the
            <code>bridge</code> mode; however, exposed container ports are mapped directly to
            the corresponding host port, so you cannot take advantage of dynamic host port mappings
            or run multiple instantiations of the same task on a single container instance if
            port mappings are used.
            </para>
             
            <para>
            For more information, see <a href="https://docs.docker.com/engine/reference/run/#network-settings">Network
            settings</a> in the <i>Docker run reference</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.PlacementConstraints">
            <summary>
            Gets and sets the property PlacementConstraints. 
            <para>
            An array of placement constraint objects to use for the task. You can specify a maximum
            of 10 constraints per task (this limit includes constraints in the task definition
            and those specified at run time).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.TaskRoleArn">
            <summary>
            Gets and sets the property TaskRoleArn. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the IAM role that containers
            in this task can assume. All containers in this task are granted the permissions that
            are specified in this role. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html">IAM
            Roles for Tasks</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionRequest.Volumes">
            <summary>
            Gets and sets the property Volumes. 
            <para>
            A list of volume definitions in JSON format that containers in your task may use.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.RegisterTaskDefinitionResponse">
            <summary>
            This is the response object from the RegisterTaskDefinition operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RegisterTaskDefinitionResponse.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The full description of the registered task definition.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Resource">
            <summary>
            Describes the resources available for a container instance.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Resource.DoubleValue">
            <summary>
            Gets and sets the property DoubleValue. 
            <para>
            When the <code>doubleValue</code> type is set, the value of the resource must be a
            double precision floating-point type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Resource.IntegerValue">
            <summary>
            Gets and sets the property IntegerValue. 
            <para>
            When the <code>integerValue</code> type is set, the value of the resource must be
            an integer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Resource.LongValue">
            <summary>
            Gets and sets the property LongValue. 
            <para>
            When the <code>longValue</code> type is set, the value of the resource must be an
            extended precision floating-point type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Resource.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the resource, such as <code>cpu</code>, <code>memory</code>, <code>ports</code>,
            or a user-defined resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Resource.StringSetValue">
            <summary>
            Gets and sets the property StringSetValue. 
            <para>
            When the <code>stringSetValue</code> type is set, the value of the resource must be
            a string type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Resource.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of the resource, such as <code>INTEGER</code>, <code>DOUBLE</code>, <code>LONG</code>,
            or <code>STRINGSET</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.RunTaskRequest">
            <summary>
            Container for the parameters to the RunTask operation.
            Starts a new task using the specified task definition.
            
             
            <para>
            You can allow Amazon ECS to place tasks for you, or you can customize how Amazon ECS
            places tasks using placement constraints and placement strategies. For more information,
            see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
            Tasks</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </para>
             
            <para>
            Alternatively, you can use <a>StartTask</a> to use your own scheduler or place tasks
            manually on specific container instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster on which to run your
            task. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.Count">
            <summary>
            Gets and sets the property Count. 
            <para>
            The number of instantiations of the specified task to place on your cluster. You can
            specify up to 10 tasks per call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.Group">
            <summary>
            Gets and sets the property Group. 
            <para>
            The name of the task group to associate with the task. The default value is the family
            name of the task definition (for example, family:my-family-name).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.Overrides">
            <summary>
            Gets and sets the property Overrides. 
            <para>
            A list of container overrides in JSON format that specify the name of a container
            in the specified task definition and the overrides it should receive. You can override
            the default command for a container (that is specified in the task definition or Docker
            image) with a <code>command</code> override. You can also override existing environment
            variables (that are specified in the task definition or Docker image) on a container
            or add new environment variables to it with an <code>environment</code> override.
            </para>
             <note> 
            <para>
            A total of 8192 characters are allowed for overrides. This limit includes the JSON
            formatting characters of the override structure.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.PlacementConstraints">
            <summary>
            Gets and sets the property PlacementConstraints. 
            <para>
            An array of placement constraint objects to use for the task. You can specify up to
            10 constraints per task (including constraints in the task definition and those specified
            at run time).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.PlacementStrategy">
            <summary>
            Gets and sets the property PlacementStrategy. 
            <para>
            The placement strategy objects to use for the task. You can specify a maximum of 5
            strategy rules per task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.StartedBy">
            <summary>
            Gets and sets the property StartedBy. 
            <para>
            An optional tag specified when a task is started. For example if you automatically
            trigger a task to run a batch process job, you could apply a unique identifier for
            that job to your task with the <code>startedBy</code> parameter. You can then identify
            which tasks belong to that job by filtering the results of a <a>ListTasks</a> call
            with the <code>startedBy</code> value. Up to 36 letters (uppercase and lowercase),
            numbers, hyphens, and underscores are allowed.
            </para>
             
            <para>
            If a task is started by an Amazon ECS service, then the <code>startedBy</code> parameter
            contains the deployment ID of the service that starts it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskRequest.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The <code>family</code> and <code>revision</code> (<code>family:revision</code>) or
            full Amazon Resource Name (ARN) of the task definition to run. If a <code>revision</code>
            is not specified, the latest <code>ACTIVE</code> revision is used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.RunTaskResponse">
            <summary>
            This is the response object from the RunTask operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.RunTaskResponse.Tasks">
            <summary>
            Gets and sets the property Tasks. 
            <para>
            A full description of the tasks that were run. Each task that was successfully placed
            on your cluster are described here.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServerException">
            <summary>
             ECS exception
             </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ServerException.#ctor(System.String)">
            <summary>
            Constructs a new ServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ServerException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.Service">
            <summary>
            Details on a service within a cluster
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.ClusterArn">
            <summary>
            Gets and sets the property ClusterArn. 
            <para>
            The Amazon Resource Name (ARN) of the cluster that hosts the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix timestamp for when the service was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.DeploymentConfiguration">
            <summary>
            Gets and sets the property DeploymentConfiguration. 
            <para>
            Optional deployment parameters that control how many tasks run during the deployment
            and the ordering of stopping and starting tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.Deployments">
            <summary>
            Gets and sets the property Deployments. 
            <para>
            The current state of deployments for the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.DesiredCount">
            <summary>
            Gets and sets the property DesiredCount. 
            <para>
            The desired number of instantiations of the task definition to keep running on the
            service. This value is specified when the service is created with <a>CreateService</a>,
            and it can be modified with <a>UpdateService</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.Events">
            <summary>
            Gets and sets the property Events. 
            <para>
            The event stream for your service. A maximum of 100 of the latest events are displayed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.LoadBalancers">
            <summary>
            Gets and sets the property LoadBalancers. 
            <para>
            A list of Elastic Load Balancing load balancer objects, containing the load balancer
            name, the container name (as it appears in a container definition), and the container
            port to access from the load balancer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.PendingCount">
            <summary>
            Gets and sets the property PendingCount. 
            <para>
            The number of tasks in the cluster that are in the <code>PENDING</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.PlacementConstraints">
            <summary>
            Gets and sets the property PlacementConstraints. 
            <para>
            The placement constraints for the tasks in the service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.PlacementStrategy">
            <summary>
            Gets and sets the property PlacementStrategy. 
            <para>
            The placement strategy that determines how tasks for the service are placed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role associated with the service that allows
            the Amazon ECS container agent to register container instances with an Elastic Load
            Balancing load balancer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.RunningCount">
            <summary>
            Gets and sets the property RunningCount. 
            <para>
            The number of tasks in the cluster that are in the <code>RUNNING</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.ServiceArn">
            <summary>
            Gets and sets the property ServiceArn. 
            <para>
            The Amazon Resource Name (ARN) that identifies the service. The ARN contains the <code>arn:aws:ecs</code>
            namespace, followed by the region of the service, the AWS account ID of the service
            owner, the <code>service</code> namespace, and then the service name. For example,
            <code>arn:aws:ecs:<i>region</i>:<i>012345678910</i>:service/<i>my-service</i> </code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.ServiceName">
            <summary>
            Gets and sets the property ServiceName. 
            <para>
            The name of your service. Up to 255 letters (uppercase and lowercase), numbers, hyphens,
            and underscores are allowed. Service names must be unique within a cluster, but you
            can have similarly named services in multiple clusters within a region or across multiple
            regions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the service. The valid values are <code>ACTIVE</code>, <code>DRAINING</code>,
            or <code>INACTIVE</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Service.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The task definition to use for tasks in the service. This value is specified when
            the service is created with <a>CreateService</a>, and it can be modified with <a>UpdateService</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceEvent">
            <summary>
            Details on an event associated with a service.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceEvent.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix timestamp for when the event was triggered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceEvent.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID string of the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.ServiceEvent.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The event message.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceNotActiveException">
            <summary>
             ECS exception
             </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotActiveException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceNotActiveException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotActiveException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceNotActiveException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotActiveException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceNotActiveException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotActiveException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceNotActiveException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotActiveException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceNotActiveException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotActiveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ServiceNotActiveException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.ServiceNotFoundException">
            <summary>
             ECS exception
             </summary>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.ServiceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ServiceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.StartTaskRequest">
            <summary>
            Container for the parameters to the StartTask operation.
            Starts a new task from the specified task definition on the specified container instance
            or instances.
            
             
            <para>
            Alternatively, you can use <a>RunTask</a> to place tasks for you. For more information,
            see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
            Tasks</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster on which to start
            your task. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.ContainerInstances">
            <summary>
            Gets and sets the property ContainerInstances. 
            <para>
            The container instance IDs or full Amazon Resource Name (ARN) entries for the container
            instances on which you would like to place your task. You can specify up to 10 container
            instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.Group">
            <summary>
            Gets and sets the property Group. 
            <para>
            The name of the task group to associate with the task. The default value is the family
            name of the task definition (for example, family:my-family-name).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.Overrides">
            <summary>
            Gets and sets the property Overrides. 
            <para>
            A list of container overrides in JSON format that specify the name of a container
            in the specified task definition and the overrides it should receive. You can override
            the default command for a container (that is specified in the task definition or Docker
            image) with a <code>command</code> override. You can also override existing environment
            variables (that are specified in the task definition or Docker image) on a container
            or add new environment variables to it with an <code>environment</code> override.
            </para>
             <note> 
            <para>
            A total of 8192 characters are allowed for overrides. This limit includes the JSON
            formatting characters of the override structure.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.StartedBy">
            <summary>
            Gets and sets the property StartedBy. 
            <para>
            An optional tag specified when a task is started. For example if you automatically
            trigger a task to run a batch process job, you could apply a unique identifier for
            that job to your task with the <code>startedBy</code> parameter. You can then identify
            which tasks belong to that job by filtering the results of a <a>ListTasks</a> call
            with the <code>startedBy</code> value. Up to 36 letters (uppercase and lowercase),
            numbers, hyphens, and underscores are allowed.
            </para>
             
            <para>
            If a task is started by an Amazon ECS service, then the <code>startedBy</code> parameter
            contains the deployment ID of the service that starts it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskRequest.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The <code>family</code> and <code>revision</code> (<code>family:revision</code>) or
            full Amazon Resource Name (ARN) of the task definition to start. If a <code>revision</code>
            is not specified, the latest <code>ACTIVE</code> revision is used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.StartTaskResponse">
            <summary>
            This is the response object from the StartTask operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StartTaskResponse.Tasks">
            <summary>
            Gets and sets the property Tasks. 
            <para>
            A full description of the tasks that were started. Each task that was successfully
            placed on your container instances are described here.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.StopTaskRequest">
            <summary>
            Container for the parameters to the StopTask operation.
            Stops a running task.
            
             
            <para>
            When <a>StopTask</a> is called on a task, the equivalent of <code>docker stop</code>
            is issued to the containers running in the task. This results in a <code>SIGTERM</code>
            and a default 30-second timeout, after which <code>SIGKILL</code> is sent and the
            containers are forcibly stopped. If the container handles the <code>SIGTERM</code>
            gracefully and exits within 30 seconds from receiving it, no <code>SIGKILL</code>
            is sent.
            </para>
             <note> 
            <para>
            The default 30-second timeout can be configured on the Amazon ECS container agent
            with the <code>ECS_CONTAINER_STOP_TIMEOUT</code> variable. For more information, see
            <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS Container Agent Configuration</a> in the <i>Amazon EC2 Container Service Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StopTaskRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the task
            to stop. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StopTaskRequest.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            An optional message specified when a task is stopped. For example, if you are using
            a custom scheduler, you can use this parameter to specify the reason for stopping
            the task here, and the message will appear in subsequent <a>DescribeTasks</a> API
            operations on this task. Up to 255 characters are allowed in this message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StopTaskRequest.Task">
            <summary>
            Gets and sets the property Task. 
            <para>
            The task ID or full Amazon Resource Name (ARN) entry of the task to stop.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.StopTaskResponse">
            <summary>
            This is the response object from the StopTask operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.StopTaskResponse.Task">
            <summary>
            Gets and sets the property Task. 
            <para>
            The task that was stopped.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TargetNotFoundException">
            <summary>
             ECS exception
             </summary>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new TargetNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TargetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of TargetNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TargetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TargetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.TargetNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TargetNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.Task">
            <summary>
            Details on a task in a cluster.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.ClusterArn">
            <summary>
            Gets and sets the property ClusterArn. 
            <para>
            The Amazon Resource Name (ARN) of the cluster that hosts the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.ContainerInstanceArn">
            <summary>
            Gets and sets the property ContainerInstanceArn. 
            <para>
            The Amazon Resource Name (ARN) of the container instances that host the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Containers">
            <summary>
            Gets and sets the property Containers. 
            <para>
            The containers associated with the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The Unix timestamp for when the task was created (the task entered the <code>PENDING</code>
            state).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.DesiredStatus">
            <summary>
            Gets and sets the property DesiredStatus. 
            <para>
            The desired status of the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Group">
            <summary>
            Gets and sets the property Group. 
            <para>
            The name of the task group associated with the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.LastStatus">
            <summary>
            Gets and sets the property LastStatus. 
            <para>
            The last known status of the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Overrides">
            <summary>
            Gets and sets the property Overrides. 
            <para>
            One or more container overrides.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.StartedAt">
            <summary>
            Gets and sets the property StartedAt. 
            <para>
            The Unix timestamp for when the task was started (the task transitioned from the <code>PENDING</code>
            state to the <code>RUNNING</code> state).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.StartedBy">
            <summary>
            Gets and sets the property StartedBy. 
            <para>
            The tag specified when a task is started. If the task is started by an Amazon ECS
            service, then the <code>startedBy</code> parameter contains the deployment ID of the
            service that starts it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.StoppedAt">
            <summary>
            Gets and sets the property StoppedAt. 
            <para>
            The Unix timestamp for when the task was stopped (the task transitioned from the <code>RUNNING</code>
            state to the <code>STOPPED</code> state).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.StoppedReason">
            <summary>
            Gets and sets the property StoppedReason. 
            <para>
            The reason the task was stopped.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.TaskArn">
            <summary>
            Gets and sets the property TaskArn. 
            <para>
            The Amazon Resource Name (ARN) of the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.TaskDefinitionArn">
            <summary>
            Gets and sets the property TaskDefinitionArn. 
            <para>
            The Amazon Resource Name (ARN) of the task definition that creates the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Task.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version counter for the task. Every time a task experiences a change that triggers
            a CloudWatch event, the version counter is incremented. If you are replicating your
            Amazon ECS task state with CloudWatch events, you can compare the version of a task
            reported by the Amazon ECS APIs with the version reported in CloudWatch events for
            the task (inside the <code>detail</code> object) to verify that the version in your
            event stream is current.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TaskDefinition">
            <summary>
            Details of a task definition.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.ContainerDefinitions">
            <summary>
            Gets and sets the property ContainerDefinitions. 
            <para>
            A list of container definitions in JSON format that describe the different containers
            that make up your task. For more information about container definition parameters
            and defaults, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html">Amazon
            ECS Task Definitions</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.Family">
            <summary>
            Gets and sets the property Family. 
            <para>
            The family of your task definition, used as the definition name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.NetworkMode">
            <summary>
            Gets and sets the property NetworkMode. 
            <para>
            The Docker networking mode to use for the containers in the task. The valid values
            are <code>none</code>, <code>bridge</code>, and <code>host</code>. 
            </para>
             
            <para>
            If the network mode is <code>none</code>, the containers do not have external connectivity.
            The default Docker network mode is <code>bridge</code>. The <code>host</code> network
            mode offers the highest networking performance for containers because it uses the
            host network stack instead of the virtualized network stack provided by the <code>bridge</code>
            mode.
            </para>
             
            <para>
            For more information, see <a href="https://docs.docker.com/engine/reference/run/#network-settings">Network
            settings</a> in the <i>Docker run reference</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.PlacementConstraints">
            <summary>
            Gets and sets the property PlacementConstraints. 
            <para>
            An array of placement constraint objects to use for tasks. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.RequiresAttributes">
            <summary>
            Gets and sets the property RequiresAttributes. 
            <para>
            The container instance attributes required by your task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.Revision">
            <summary>
            Gets and sets the property Revision. 
            <para>
            The revision of the task in a particular family. The revision is a version number
            of a task definition in a family. When you register a task definition for the first
            time, the revision is <code>1</code>; each time you register a new revision of a task
            definition in the same family, the revision value always increases by one (even if
            you have deregistered previous revisions in this family).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the task definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.TaskDefinitionArn">
            <summary>
            Gets and sets the property TaskDefinitionArn. 
            <para>
            The full Amazon Resource Name (ARN) of the task definition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.TaskRoleArn">
            <summary>
            Gets and sets the property TaskRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role that containers in this task can assume.
            All containers in this task are granted the permissions that are specified in this
            role.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinition.Volumes">
            <summary>
            Gets and sets the property Volumes. 
            <para>
            The list of volumes in a task. For more information about volume definition parameters
            and defaults, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html">Amazon
            ECS Task Definitions</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TaskDefinitionPlacementConstraint">
            <summary>
            An object representing a constraint on task placement in the task definition. For
            more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html">Task
            Placement Constraints</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinitionPlacementConstraint.Expression">
            <summary>
            Gets and sets the property Expression. 
            <para>
            A cluster query language expression to apply to the constraint. For more information,
            see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
            Query Language</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskDefinitionPlacementConstraint.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of constraint. The <code>DistinctInstance</code> constraint ensures that
            each task in a particular group is running on a different container instance. The
            <code>MemberOf</code> constraint restricts selection to be from a group of valid candidates.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.TaskOverride">
            <summary>
            The overrides associated with a task.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskOverride.ContainerOverrides">
            <summary>
            Gets and sets the property ContainerOverrides. 
            <para>
            One or more container overrides sent to a task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.TaskOverride.TaskRoleArn">
            <summary>
            Gets and sets the property TaskRoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role that containers in this task can assume.
            All containers in this task are granted the permissions that are specified in this
            role.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Ulimit">
            <summary>
            The <code>ulimit</code> settings to pass to the container.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Ulimit.HardLimit">
            <summary>
            Gets and sets the property HardLimit. 
            <para>
            The hard limit for the ulimit type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Ulimit.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The <code>type</code> of the <code>ulimit</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Ulimit.SoftLimit">
            <summary>
            Gets and sets the property SoftLimit. 
            <para>
            The soft limit for the ulimit type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateContainerAgentRequest">
            <summary>
            Container for the parameters to the UpdateContainerAgent operation.
            Updates the Amazon ECS container agent on a specified container instance. Updating
            the Amazon ECS container agent does not interrupt running tasks or services on the
            container instance. The process for updating the agent differs depending on whether
            your container instance was launched with the Amazon ECS-optimized AMI or another
            operating system.
            
             
            <para>
             <code>UpdateContainerAgent</code> requires the Amazon ECS-optimized AMI or Amazon
            Linux with the <code>ecs-init</code> service installed and running. For help updating
            the Amazon ECS container agent on other operating systems, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html#manually_update_agent">Manually
            Updating the Amazon ECS Container Agent</a> in the <i>Amazon EC2 Container Service
            Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerAgentRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that your container
            instance is running on. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerAgentRequest.ContainerInstance">
            <summary>
            Gets and sets the property ContainerInstance. 
            <para>
            The container instance ID or full Amazon Resource Name (ARN) entries for the container
            instance on which you would like to update the Amazon ECS container agent.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateContainerAgentResponse">
            <summary>
            This is the response object from the UpdateContainerAgent operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerAgentResponse.ContainerInstance">
            <summary>
            Gets and sets the property ContainerInstance. 
            <para>
            The container instance for which the container agent was updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateContainerInstancesStateRequest">
            <summary>
            Container for the parameters to the UpdateContainerInstancesState operation.
            Modifies the status of an Amazon ECS container instance.
            
             
            <para>
            You can change the status of a container instance to <code>DRAINING</code> to manually
            remove an instance from a cluster, for example to perform system updates, update the
            Docker daemon, or scale down the cluster size. 
            </para>
             
            <para>
            When you set a container instance to <code>DRAINING</code>, Amazon ECS prevents new
            tasks from being scheduled for placement on the container instance and replacement
            service tasks are started on other container instances in the cluster if the resources
            are available. Service tasks on the container instance that are in the <code>PENDING</code>
            state are stopped immediately.
            </para>
             
            <para>
            Service tasks on the container instance that are in the <code>RUNNING</code> state
            are stopped and replaced according the service's deployment configuration parameters,
            <code>minimumHealthyPercent</code> and <code>maximumPercent</code>. Note that you
            can change the deployment configuration of your service using <a>UpdateService</a>.
            </para>
             <ul> <li> 
            <para>
            If <code>minimumHealthyPercent</code> is below 100%, the scheduler can ignore <code>desiredCount</code>
            temporarily during task replacement. For example, <code>desiredCount</code> is four
            tasks, a minimum of 50% allows the scheduler to stop two existing tasks before starting
            two new tasks. If the minimum is 100%, the service scheduler can't remove existing
            tasks until the replacement tasks are considered healthy. Tasks for services that
            do not use a load balancer are considered healthy if they are in the <code>RUNNING</code>
            state. Tasks for services that use a load balancer are considered healthy if they
            are in the <code>RUNNING</code> state and the container instance they are hosted on
            is reported as healthy by the load balancer.
            </para>
             </li> <li> 
            <para>
            The <code>maximumPercent</code> parameter represents an upper limit on the number
            of running tasks during task replacement, which enables you to define the replacement
            batch size. For example, if <code>desiredCount</code> of four tasks, a maximum of
            200% starts four new tasks before stopping the four tasks to be drained (provided
            that the cluster resources required to do this are available). If the maximum is 100%,
            then replacement tasks can't start until the draining tasks have stopped.
            </para>
             </li> </ul> 
            <para>
            Any <code>PENDING</code> or <code>RUNNING</code> tasks that do not belong to a service
            are not affected; you must wait for them to finish or stop them manually.
            </para>
             
            <para>
            A container instance has completed draining when it has no more <code>RUNNING</code>
            tasks. You can verify this using <a>ListTasks</a>.
            </para>
             
            <para>
            When you set a container instance to <code>ACTIVE</code>, the Amazon ECS scheduler
            can begin scheduling tasks on the instance again.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerInstancesStateRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container
            instance to update. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerInstancesStateRequest.ContainerInstances">
            <summary>
            Gets and sets the property ContainerInstances. 
            <para>
            A list of container instance IDs or full Amazon Resource Name (ARN) entries.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerInstancesStateRequest.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The container instance state with which to update the container instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateContainerInstancesStateResponse">
            <summary>
            This is the response object from the UpdateContainerInstancesState operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerInstancesStateResponse.ContainerInstances">
            <summary>
            Gets and sets the property ContainerInstances. 
            <para>
            The list of container instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateContainerInstancesStateResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            Any failures associated with the call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateInProgressException">
            <summary>
             ECS exception
             </summary>
        </member>
        <member name="M:Amazon.ECS.Model.UpdateInProgressException.#ctor(System.String)">
            <summary>
            Constructs a new UpdateInProgressException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ECS.Model.UpdateInProgressException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UpdateInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.UpdateInProgressException.#ctor(System.Exception)">
            <summary>
            Construct instance of UpdateInProgressException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ECS.Model.UpdateInProgressException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UpdateInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.UpdateInProgressException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UpdateInProgressException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ECS.Model.UpdateInProgressException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UpdateInProgressException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateServiceRequest">
            <summary>
            Container for the parameters to the UpdateService operation.
            Modifies the desired count, deployment configuration, or task definition used in a
            service.
            
             
            <para>
            You can add to or subtract from the number of instantiations of a task definition
            in a service by specifying the cluster that the service is running in and a new <code>desiredCount</code>
            parameter.
            </para>
             
            <para>
            You can use <a>UpdateService</a> to modify your task definition and deploy a new version
            of your service.
            </para>
             
            <para>
            You can also update the deployment configuration of a service. When a deployment is
            triggered by updating the task definition of a service, the service scheduler uses
            the deployment configuration parameters, <code>minimumHealthyPercent</code> and <code>maximumPercent</code>,
            to determine the deployment strategy.
            </para>
             <ul> <li> 
            <para>
            If <code>minimumHealthyPercent</code> is below 100%, the scheduler can ignore <code>desiredCount</code>
            temporarily during a deployment. For example, if <code>desiredCount</code> is four
            tasks, a minimum of 50% allows the scheduler to stop two existing tasks before starting
            two new tasks. Tasks for services that do not use a load balancer are considered healthy
            if they are in the <code>RUNNING</code> state. Tasks for services that use a load
            balancer are considered healthy if they are in the <code>RUNNING</code> state and
            the container instance they are hosted on is reported as healthy by the load balancer.
            </para>
             </li> <li> 
            <para>
            The <code>maximumPercent</code> parameter represents an upper limit on the number
            of running tasks during a deployment, which enables you to define the deployment batch
            size. For example, if <code>desiredCount</code> is four tasks, a maximum of 200% starts
            four new tasks before stopping the four older tasks (provided that the cluster resources
            required to do this are available).
            </para>
             </li> </ul> 
            <para>
            When <a>UpdateService</a> stops a task during a deployment, the equivalent of <code>docker
            stop</code> is issued to the containers running in the task. This results in a <code>SIGTERM</code>
            and a 30-second timeout, after which <code>SIGKILL</code> is sent and the containers
            are forcibly stopped. If the container handles the <code>SIGTERM</code> gracefully
            and exits within 30 seconds from receiving it, no <code>SIGKILL</code> is sent.
            </para>
             
            <para>
            When the service scheduler launches new tasks, it determines task placement in your
            cluster with the following logic:
            </para>
             <ul> <li> 
            <para>
            Determine which of the container instances in your cluster can support your service's
            task definition (for example, they have the required CPU, memory, ports, and container
            instance attributes).
            </para>
             </li> <li> 
            <para>
            By default, the service scheduler attempts to balance tasks across Availability Zones
            in this manner (although you can choose a different placement strategy):
            </para>
             <ul> <li> 
            <para>
            Sort the valid container instances by the fewest number of running tasks for this
            service in the same Availability Zone as the instance. For example, if zone A has
            one running service task and zones B and C each have zero, valid container instances
            in either zone B or C are considered optimal for placement.
            </para>
             </li> <li> 
            <para>
            Place the new service task on a valid container instance in an optimal Availability
            Zone (based on the previous steps), favoring container instances with the fewest number
            of running tasks for this service.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            When the service scheduler stops running tasks, it attempts to maintain balance across
            the Availability Zones in your cluster using the following logic: 
            </para>
             <ul> <li> 
            <para>
            Sort the container instances by the largest number of running tasks for this service
            in the same Availability Zone as the instance. For example, if zone A has one running
            service task and zones B and C each have two, container instances in either zone B
            or C are considered optimal for termination.
            </para>
             </li> <li> 
            <para>
            Stop the task on a container instance in an optimal Availability Zone (based on the
            previous steps), favoring container instances with the largest number of running tasks
            for this service.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            The short name or full Amazon Resource Name (ARN) of the cluster that your service
            is running on. If you do not specify a cluster, the default cluster is assumed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.DeploymentConfiguration">
            <summary>
            Gets and sets the property DeploymentConfiguration. 
            <para>
            Optional deployment parameters that control how many tasks run during the deployment
            and the ordering of stopping and starting tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.DesiredCount">
            <summary>
            Gets and sets the property DesiredCount. 
            <para>
            The number of instantiations of the task to place and keep running in your service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The name of the service to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceRequest.TaskDefinition">
            <summary>
            Gets and sets the property TaskDefinition. 
            <para>
            The <code>family</code> and <code>revision</code> (<code>family:revision</code>) or
            full Amazon Resource Name (ARN) of the task definition to run in your service. If
            a <code>revision</code> is not specified, the latest <code>ACTIVE</code> revision
            is used. If you modify the task definition with <code>UpdateService</code>, Amazon
            ECS spawns a task with the new version of the task definition and then stops an old
            task after the new version is running.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.UpdateServiceResponse">
            <summary>
            This is the response object from the UpdateService operation.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.UpdateServiceResponse.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            The full description of your service following the update call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.VersionInfo">
            <summary>
            The Docker and Amazon ECS container agent version information about a container instance.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.VersionInfo.AgentHash">
            <summary>
            Gets and sets the property AgentHash. 
            <para>
            The Git commit hash for the Amazon ECS container agent build on the <a href="https://github.com/aws/amazon-ecs-agent/commits/master">amazon-ecs-agent
            </a> GitHub repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.VersionInfo.AgentVersion">
            <summary>
            Gets and sets the property AgentVersion. 
            <para>
            The version number of the Amazon ECS container agent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.VersionInfo.DockerVersion">
            <summary>
            Gets and sets the property DockerVersion. 
            <para>
            The Docker version running on the container instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Volume">
            <summary>
            A data volume used in a task definition.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Volume.Host">
            <summary>
            Gets and sets the property Host. 
            <para>
            The contents of the <code>host</code> parameter determine whether your data volume
            persists on the host container instance and where it is stored. If the host parameter
            is empty, then the Docker daemon assigns a host path for your data volume, but the
            data is not guaranteed to persist after the containers associated with it stop running.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.Volume.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the volume. Up to 255 letters (uppercase and lowercase), numbers, hyphens,
            and underscores are allowed. This name is referenced in the <code>sourceVolume</code>
            parameter of container definition <code>mountPoints</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.VolumeFrom">
            <summary>
            Details on a data volume from another container in the same task definition.
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.VolumeFrom.ReadOnly">
            <summary>
            Gets and sets the property ReadOnly. 
            <para>
            If this value is <code>true</code>, the container has read-only access to the volume.
            If this value is <code>false</code>, then the container can write to the volume. The
            default value is <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ECS.Model.VolumeFrom.SourceContainer">
            <summary>
            Gets and sets the property SourceContainer. 
            <para>
            The name of another container within the same task definition to mount volumes from.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeMarshaller">
            <summary>
            Attribute Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeMarshaller.Marshall(Amazon.ECS.Model.Attribute,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeUnmarshaller">
            <summary>
            Response Unmarshaller for Attribute Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Attribute,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.AttributeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterUnmarshaller">
            <summary>
            Response Unmarshaller for Cluster Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Cluster,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ClusterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDefinitionMarshaller">
            <summary>
            ContainerDefinition Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDefinitionMarshaller.Marshall(Amazon.ECS.Model.ContainerDefinition,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDefinitionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDefinitionUnmarshaller">
            <summary>
            Response Unmarshaller for ContainerDefinition Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDefinitionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ContainerDefinition,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDefinitionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerDefinitionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerInstanceUnmarshaller">
            <summary>
            Response Unmarshaller for ContainerInstance Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerInstanceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ContainerInstance,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerInstanceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerInstanceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerOverrideMarshaller">
            <summary>
            ContainerOverride Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerOverrideMarshaller.Marshall(Amazon.ECS.Model.ContainerOverride,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerOverrideMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerOverrideUnmarshaller">
            <summary>
            Response Unmarshaller for ContainerOverride Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerOverrideUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ContainerOverride,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerOverrideUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerOverrideUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerUnmarshaller">
            <summary>
            Response Unmarshaller for Container Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Container,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ContainerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller">
            <summary>
            CreateCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller.Marshall(Amazon.ECS.Model.CreateClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceRequestMarshaller">
            <summary>
            CreateService Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceRequestMarshaller.Marshall(Amazon.ECS.Model.CreateServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateService operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.CreateServiceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesRequestMarshaller">
            <summary>
            DeleteAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesRequestMarshaller.Marshall(Amazon.ECS.Model.DeleteAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller">
            <summary>
            DeleteCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller.Marshall(Amazon.ECS.Model.DeleteClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceRequestMarshaller">
            <summary>
            DeleteService Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceRequestMarshaller.Marshall(Amazon.ECS.Model.DeleteServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteService operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeleteServiceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentConfigurationMarshaller">
            <summary>
            DeploymentConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentConfigurationMarshaller.Marshall(Amazon.ECS.Model.DeploymentConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for DeploymentConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#DeploymentConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentUnmarshaller">
            <summary>
            Response Unmarshaller for Deployment Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Deployment,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeploymentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceRequestMarshaller">
            <summary>
            DeregisterContainerInstance Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceRequestMarshaller.Marshall(Amazon.ECS.Model.DeregisterContainerInstanceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeregisterContainerInstance operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterContainerInstanceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionRequestMarshaller">
            <summary>
            DeregisterTaskDefinition Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionRequestMarshaller.Marshall(Amazon.ECS.Model.DeregisterTaskDefinitionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeregisterTaskDefinition operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DeregisterTaskDefinitionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersRequestMarshaller">
            <summary>
            DescribeClusters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersRequestMarshaller.Marshall(Amazon.ECS.Model.DescribeClustersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeClusters operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeClustersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesRequestMarshaller">
            <summary>
            DescribeContainerInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesRequestMarshaller.Marshall(Amazon.ECS.Model.DescribeContainerInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeContainerInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeContainerInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesRequestMarshaller">
            <summary>
            DescribeServices Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesRequestMarshaller.Marshall(Amazon.ECS.Model.DescribeServicesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeServices operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeServicesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionRequestMarshaller">
            <summary>
            DescribeTaskDefinition Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionRequestMarshaller.Marshall(Amazon.ECS.Model.DescribeTaskDefinitionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeTaskDefinition operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTaskDefinitionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksRequestMarshaller">
            <summary>
            DescribeTasks Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksRequestMarshaller.Marshall(Amazon.ECS.Model.DescribeTasksRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeTasks operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.DescribeTasksResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.FailureUnmarshaller">
            <summary>
            Response Unmarshaller for Failure Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FailureUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Failure,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.FailureUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.FailureUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.HostEntryMarshaller">
            <summary>
            HostEntry Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HostEntryMarshaller.Marshall(Amazon.ECS.Model.HostEntry,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.HostEntryMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.HostEntryUnmarshaller">
            <summary>
            Response Unmarshaller for HostEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HostEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#HostEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HostEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.HostEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.HostVolumePropertiesMarshaller">
            <summary>
            HostVolumeProperties Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HostVolumePropertiesMarshaller.Marshall(Amazon.ECS.Model.HostVolumeProperties,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.HostVolumePropertiesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.HostVolumePropertiesUnmarshaller">
            <summary>
            Response Unmarshaller for HostVolumeProperties Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HostVolumePropertiesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#HostVolumeProperties,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.HostVolumePropertiesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.HostVolumePropertiesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.KeyValuePairMarshaller">
            <summary>
            KeyValuePair Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.KeyValuePairMarshaller.Marshall(Amazon.ECS.Model.KeyValuePair,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.KeyValuePairMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.KeyValuePairUnmarshaller">
            <summary>
            Response Unmarshaller for KeyValuePair Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.KeyValuePairUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#KeyValuePair,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.KeyValuePairUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.KeyValuePairUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesRequestMarshaller">
            <summary>
            ListAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesRequestMarshaller.Marshall(Amazon.ECS.Model.ListAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersRequestMarshaller">
            <summary>
            ListClusters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersRequestMarshaller.Marshall(Amazon.ECS.Model.ListClustersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListClusters operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListClustersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesRequestMarshaller">
            <summary>
            ListContainerInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesRequestMarshaller.Marshall(Amazon.ECS.Model.ListContainerInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListContainerInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListContainerInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesRequestMarshaller">
            <summary>
            ListServices Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesRequestMarshaller.Marshall(Amazon.ECS.Model.ListServicesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListServices operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListServicesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesRequestMarshaller">
            <summary>
            ListTaskDefinitionFamilies Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesRequestMarshaller.Marshall(Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTaskDefinitionFamilies operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionFamiliesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsRequestMarshaller">
            <summary>
            ListTaskDefinitions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsRequestMarshaller.Marshall(Amazon.ECS.Model.ListTaskDefinitionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTaskDefinitions operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListTaskDefinitionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksRequestMarshaller">
            <summary>
            ListTasks Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksRequestMarshaller.Marshall(Amazon.ECS.Model.ListTasksRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTasks operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ListTasksResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.LoadBalancerMarshaller">
            <summary>
            LoadBalancer Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LoadBalancerMarshaller.Marshall(Amazon.ECS.Model.LoadBalancer,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.LoadBalancerMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.LoadBalancerUnmarshaller">
            <summary>
            Response Unmarshaller for LoadBalancer Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LoadBalancerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#LoadBalancer,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LoadBalancerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.LoadBalancerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.LogConfigurationMarshaller">
            <summary>
            LogConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LogConfigurationMarshaller.Marshall(Amazon.ECS.Model.LogConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.LogConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.LogConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for LogConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LogConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#LogConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.LogConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.LogConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.MountPointMarshaller">
            <summary>
            MountPoint Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.MountPointMarshaller.Marshall(Amazon.ECS.Model.MountPoint,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.MountPointMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.MountPointUnmarshaller">
            <summary>
            Response Unmarshaller for MountPoint Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.MountPointUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#MountPoint,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.MountPointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.MountPointUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkBindingUnmarshaller">
            <summary>
            Response Unmarshaller for NetworkBinding Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkBindingUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#NetworkBinding,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkBindingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.NetworkBindingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementConstraintMarshaller">
            <summary>
            PlacementConstraint Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementConstraintMarshaller.Marshall(Amazon.ECS.Model.PlacementConstraint,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementConstraintMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementConstraintUnmarshaller">
            <summary>
            Response Unmarshaller for PlacementConstraint Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementConstraintUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#PlacementConstraint,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementConstraintUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementConstraintUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementStrategyMarshaller">
            <summary>
            PlacementStrategy Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementStrategyMarshaller.Marshall(Amazon.ECS.Model.PlacementStrategy,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementStrategyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementStrategyUnmarshaller">
            <summary>
            Response Unmarshaller for PlacementStrategy Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementStrategyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#PlacementStrategy,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementStrategyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PlacementStrategyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PortMappingMarshaller">
            <summary>
            PortMapping Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PortMappingMarshaller.Marshall(Amazon.ECS.Model.PortMapping,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.PortMappingMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PortMappingUnmarshaller">
            <summary>
            Response Unmarshaller for PortMapping Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PortMappingUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#PortMapping,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PortMappingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PortMappingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesRequestMarshaller">
            <summary>
            PutAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesRequestMarshaller.Marshall(Amazon.ECS.Model.PutAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.PutAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionRequestMarshaller">
            <summary>
            RegisterTaskDefinition Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionRequestMarshaller.Marshall(Amazon.ECS.Model.RegisterTaskDefinitionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RegisterTaskDefinition operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.RegisterTaskDefinitionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceUnmarshaller">
            <summary>
            Response Unmarshaller for Resource Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Resource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskRequestMarshaller">
            <summary>
            RunTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskRequestMarshaller.Marshall(Amazon.ECS.Model.RunTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RunTask operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.RunTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceEventUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceEvent Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceEventUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#ServiceEvent,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceEventUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceEventUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceUnmarshaller">
            <summary>
            Response Unmarshaller for Service Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Service,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.ServiceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskRequestMarshaller">
            <summary>
            StartTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskRequestMarshaller.Marshall(Amazon.ECS.Model.StartTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartTask operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.StartTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskRequestMarshaller">
            <summary>
            StopTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskRequestMarshaller.Marshall(Amazon.ECS.Model.StopTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopTask operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.StopTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionPlacementConstraintMarshaller">
            <summary>
            TaskDefinitionPlacementConstraint Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionPlacementConstraintMarshaller.Marshall(Amazon.ECS.Model.TaskDefinitionPlacementConstraint,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionPlacementConstraintMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionPlacementConstraintUnmarshaller">
            <summary>
            Response Unmarshaller for TaskDefinitionPlacementConstraint Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionPlacementConstraintUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#TaskDefinitionPlacementConstraint,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionPlacementConstraintUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionPlacementConstraintUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionUnmarshaller">
            <summary>
            Response Unmarshaller for TaskDefinition Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#TaskDefinition,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TaskDefinitionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskOverrideMarshaller">
            <summary>
            TaskOverride Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskOverrideMarshaller.Marshall(Amazon.ECS.Model.TaskOverride,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.TaskOverrideMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskOverrideUnmarshaller">
            <summary>
            Response Unmarshaller for TaskOverride Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskOverrideUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#TaskOverride,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskOverrideUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TaskOverrideUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.TaskUnmarshaller">
            <summary>
            Response Unmarshaller for Task Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Task,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.TaskUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.TaskUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UlimitMarshaller">
            <summary>
            Ulimit Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UlimitMarshaller.Marshall(Amazon.ECS.Model.Ulimit,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.UlimitMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UlimitUnmarshaller">
            <summary>
            Response Unmarshaller for Ulimit Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UlimitUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Ulimit,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UlimitUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UlimitUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentRequestMarshaller">
            <summary>
            UpdateContainerAgent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentRequestMarshaller.Marshall(Amazon.ECS.Model.UpdateContainerAgentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateContainerAgent operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerAgentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateRequestMarshaller">
            <summary>
            UpdateContainerInstancesState Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateRequestMarshaller.Marshall(Amazon.ECS.Model.UpdateContainerInstancesStateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateContainerInstancesState operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateContainerInstancesStateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceRequestMarshaller">
            <summary>
            UpdateService Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceRequestMarshaller.Marshall(Amazon.ECS.Model.UpdateServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateService operation
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.UpdateServiceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.VersionInfoUnmarshaller">
            <summary>
            Response Unmarshaller for VersionInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VersionInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#VersionInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VersionInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.VersionInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeFromMarshaller">
            <summary>
            VolumeFrom Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeFromMarshaller.Marshall(Amazon.ECS.Model.VolumeFrom,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeFromMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeFromUnmarshaller">
            <summary>
            Response Unmarshaller for VolumeFrom Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeFromUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#VolumeFrom,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeFromUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeFromUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeMarshaller">
            <summary>
            Volume Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeMarshaller.Marshall(Amazon.ECS.Model.Volume,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeUnmarshaller">
            <summary>
            Response Unmarshaller for Volume Object
            </summary>  
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ECS#Model#Volume,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ECS.Model.Internal.MarshallTransformations.VolumeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ECS.AmazonECSClient">
             <summary>
             Implementation for accessing ECS
            
             Amazon EC2 Container Service (Amazon ECS) is a highly scalable, fast, container management
             service that makes it easy to run, stop, and manage Docker containers on a cluster
             of EC2 instances. Amazon ECS lets you launch and stop container-enabled applications
             with simple API calls, allows you to get the state of your cluster from a centralized
             service, and gives you access to many familiar Amazon EC2 features like security groups,
             Amazon EBS volumes, and IAM roles.
             
              
             <para>
             You can use Amazon ECS to schedule the placement of containers across your cluster
             based on your resource needs, isolation policies, and availability requirements. Amazon
             EC2 Container Service eliminates the need for you to operate your own cluster management
             and configuration management systems or worry about scaling your management infrastructure.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor">
             <summary>
             Constructs AmazonECSClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonECSClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(Amazon.ECS.AmazonECSConfig)">
             <summary>
             Constructs AmazonECSClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonECSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonECSClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonECSClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.ECS.AmazonECSConfig)">
            <summary>
            Constructs AmazonECSClient with AWS Credentials and an
            AmazonECSClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonECSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonECSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonECSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(System.String,System.String,Amazon.ECS.AmazonECSConfig)">
            <summary>
            Constructs AmazonECSClient with AWS Access Key ID, AWS Secret Key and an
            AmazonECSClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonECSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonECSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonECSClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.#ctor(System.String,System.String,System.String,Amazon.ECS.AmazonECSConfig)">
            <summary>
            Constructs AmazonECSClient with AWS Access Key ID, AWS Secret Key and an
            AmazonECSClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonECSClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.CreateCluster(Amazon.ECS.Model.CreateClusterRequest)">
            <summary>
            Creates a new Amazon ECS cluster. By default, your account receives a <code>default</code>
            cluster when you launch your first container instance. However, you can create your
            own cluster with a unique name with the <code>CreateCluster</code> action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCluster service method.</param>
            
            <returns>The response from the CreateCluster service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateCluster">REST API Reference for CreateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.CreateClusterAsync(Amazon.ECS.Model.CreateClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateCluster operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateCluster operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateCluster">REST API Reference for CreateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.CreateService(Amazon.ECS.Model.CreateServiceRequest)">
            <summary>
            Runs and maintains a desired number of tasks from a specified task definition. If
            the number of tasks running in a service drops below <code>desiredCount</code>, Amazon
            ECS spawns another copy of the task in the specified cluster. To update an existing
            service, see <a>UpdateService</a>.
            
             
            <para>
            In addition to maintaining the desired count of tasks in your service, you can optionally
            run your service behind a load balancer. The load balancer distributes traffic across
            the tasks that are associated with the service. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-load-balancing.html">Service
            Load Balancing</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </para>
             
            <para>
            You can optionally specify a deployment configuration for your service. During a deployment
            (which is triggered by changing the task definition or the desired count of a service
            with an <a>UpdateService</a> operation), the service scheduler uses the <code>minimumHealthyPercent</code>
            and <code>maximumPercent</code> parameters to determine the deployment strategy.
            </para>
             
            <para>
            The <code>minimumHealthyPercent</code> represents a lower limit on the number of your
            service's tasks that must remain in the <code>RUNNING</code> state during a deployment,
            as a percentage of the <code>desiredCount</code> (rounded up to the nearest integer).
            This parameter enables you to deploy without using additional cluster capacity. For
            example, if your service has a <code>desiredCount</code> of four tasks and a <code>minimumHealthyPercent</code>
            of 50%, the scheduler can stop two existing tasks to free up cluster capacity before
            starting two new tasks. Tasks for services that <i>do not</i> use a load balancer
            are considered healthy if they are in the <code>RUNNING</code> state. Tasks for services
            that <i>do</i> use a load balancer are considered healthy if they are in the <code>RUNNING</code>
            state and the container instance they are hosted on is reported as healthy by the
            load balancer. The default value for <code>minimumHealthyPercent</code> is 50% in
            the console and 100% for the AWS CLI, the AWS SDKs, and the APIs.
            </para>
             
            <para>
            The <code>maximumPercent</code> parameter represents an upper limit on the number
            of your service's tasks that are allowed in the <code>RUNNING</code> or <code>PENDING</code>
            state during a deployment, as a percentage of the <code>desiredCount</code> (rounded
            down to the nearest integer). This parameter enables you to define the deployment
            batch size. For example, if your service has a <code>desiredCount</code> of four tasks
            and a <code>maximumPercent</code> value of 200%, the scheduler can start four new
            tasks before stopping the four older tasks (provided that the cluster resources required
            to do this are available). The default value for <code>maximumPercent</code> is 200%.
            </para>
             
            <para>
            When the service scheduler launches new tasks, it determines task placement in your
            cluster using the following logic:
            </para>
             <ul> <li> 
            <para>
            Determine which of the container instances in your cluster can support your service's
            task definition (for example, they have the required CPU, memory, ports, and container
            instance attributes).
            </para>
             </li> <li> 
            <para>
            By default, the service scheduler attempts to balance tasks across Availability Zones
            in this manner (although you can choose a different placement strategy) with the <code>placementStrategy</code>
            parameter):
            </para>
             <ul> <li> 
            <para>
            Sort the valid container instances by the fewest number of running tasks for this
            service in the same Availability Zone as the instance. For example, if zone A has
            one running service task and zones B and C each have zero, valid container instances
            in either zone B or C are considered optimal for placement.
            </para>
             </li> <li> 
            <para>
            Place the new service task on a valid container instance in an optimal Availability
            Zone (based on the previous steps), favoring container instances with the fewest number
            of running tasks for this service.
            </para>
             </li> </ul> </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateService service method.</param>
            
            <returns>The response from the CreateService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateService">REST API Reference for CreateService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.CreateServiceAsync(Amazon.ECS.Model.CreateServiceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateService operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateService operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateService">REST API Reference for CreateService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteAttributes(Amazon.ECS.Model.DeleteAttributesRequest)">
            <summary>
            Deletes one or more custom attributes from an Amazon ECS resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAttributes service method.</param>
            
            <returns>The response from the DeleteAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TargetNotFoundException">
            The specified target could not be found. You can view your available container instances
            with <a>ListContainerInstances</a>. Amazon ECS container instances are cluster-specific
            and region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteAttributes">REST API Reference for DeleteAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteAttributesAsync(Amazon.ECS.Model.DeleteAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteAttributes">REST API Reference for DeleteAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteCluster(Amazon.ECS.Model.DeleteClusterRequest)">
            <summary>
            Deletes the specified cluster. You must deregister all container instances from this
            cluster before you may delete it. You can list the container instances in a cluster
            with <a>ListContainerInstances</a> and deregister them with <a>DeregisterContainerInstance</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCluster service method.</param>
            
            <returns>The response from the DeleteCluster service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterContainsContainerInstancesException">
            You cannot delete a cluster that has registered container instances. You must first
            deregister the container instances before you can delete the cluster. For more information,
            see <a>DeregisterContainerInstance</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterContainsServicesException">
            You cannot delete a cluster that contains services. You must first update the service
            to reduce its desired task count to 0 and then delete the service. For more information,
            see <a>UpdateService</a> and <a>DeleteService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteCluster">REST API Reference for DeleteCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteClusterAsync(Amazon.ECS.Model.DeleteClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteCluster operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteCluster operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteCluster">REST API Reference for DeleteCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteService(Amazon.ECS.Model.DeleteServiceRequest)">
            <summary>
            Deletes a specified service within a cluster. You can delete a service if you have
            no running tasks in it and the desired task count is zero. If the service is actively
            maintaining tasks, you cannot delete it, and you must update the service to a desired
            task count of zero. For more information, see <a>UpdateService</a>.
            
             <note> 
            <para>
            When you delete a service, if there are still running tasks that require cleanup,
            the service status moves from <code>ACTIVE</code> to <code>DRAINING</code>, and the
            service is no longer visible in the console or in <a>ListServices</a> API operations.
            After the tasks have stopped, then the service status moves from <code>DRAINING</code>
            to <code>INACTIVE</code>. Services in the <code>DRAINING</code> or <code>INACTIVE</code>
            status can still be viewed with <a>DescribeServices</a> API operations; however, in
            the future, <code>INACTIVE</code> services may be cleaned up and purged from Amazon
            ECS record keeping, and <a>DescribeServices</a> API operations on those services will
            return a <code>ServiceNotFoundException</code> error.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteService service method.</param>
            
            <returns>The response from the DeleteService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteService">REST API Reference for DeleteService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeleteServiceAsync(Amazon.ECS.Model.DeleteServiceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteService operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteService operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteService">REST API Reference for DeleteService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeregisterContainerInstance(Amazon.ECS.Model.DeregisterContainerInstanceRequest)">
            <summary>
            Deregisters an Amazon ECS container instance from the specified cluster. This instance
            is no longer available to run tasks.
            
             
            <para>
            If you intend to use the container instance for some other purpose after deregistration,
            you should stop all of the tasks running on the container instance before deregistration
            to avoid any orphaned tasks from consuming resources.
            </para>
             
            <para>
            Deregistering a container instance removes the instance from a cluster, but it does
            not terminate the EC2 instance; if you are finished using the instance, be sure to
            terminate it in the Amazon EC2 console to stop billing.
            </para>
             <note> 
            <para>
            If you terminate a running container instance, Amazon ECS automatically deregisters
            the instance from your cluster (stopped container instances or instances with disconnected
            agents are not automatically deregistered when terminated).
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterContainerInstance service method.</param>
            
            <returns>The response from the DeregisterContainerInstance service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeregisterContainerInstance">REST API Reference for DeregisterContainerInstance Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeregisterContainerInstanceAsync(Amazon.ECS.Model.DeregisterContainerInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeregisterContainerInstance operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeregisterContainerInstance operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeregisterContainerInstance">REST API Reference for DeregisterContainerInstance Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeregisterTaskDefinition(Amazon.ECS.Model.DeregisterTaskDefinitionRequest)">
            <summary>
            Deregisters the specified task definition by family and revision. Upon deregistration,
            the task definition is marked as <code>INACTIVE</code>. Existing tasks and services
            that reference an <code>INACTIVE</code> task definition continue to run without disruption.
            Existing services that reference an <code>INACTIVE</code> task definition can still
            scale up or down by modifying the service's desired count.
            
             
            <para>
            You cannot use an <code>INACTIVE</code> task definition to run new tasks or create
            new services, and you cannot update an existing service to reference an <code>INACTIVE</code>
            task definition (although there may be up to a 10 minute window following deregistration
            where these restrictions have not yet taken effect).
            </para>
             <note> 
            <para>
            At this time, <code>INACTIVE</code> task definitions remain discoverable in your account
            indefinitely; however, this behavior is subject to change in the future, so you should
            not rely on <code>INACTIVE</code> task definitions persisting beyond the life cycle
            of any associated tasks and services.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterTaskDefinition service method.</param>
            
            <returns>The response from the DeregisterTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeregisterTaskDefinition">REST API Reference for DeregisterTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DeregisterTaskDefinitionAsync(Amazon.ECS.Model.DeregisterTaskDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeregisterTaskDefinition operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeregisterTaskDefinition operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeregisterTaskDefinition">REST API Reference for DeregisterTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeClusters(Amazon.ECS.Model.DescribeClustersRequest)">
            <summary>
            Describes one or more of your clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeClusters service method.</param>
            
            <returns>The response from the DescribeClusters service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeClusters">REST API Reference for DescribeClusters Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeClustersAsync(Amazon.ECS.Model.DescribeClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeClusters operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeClusters operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeClusters">REST API Reference for DescribeClusters Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeContainerInstances(Amazon.ECS.Model.DescribeContainerInstancesRequest)">
            <summary>
            Describes Amazon EC2 Container Service container instances. Returns metadata about
            registered and remaining resources on each container instance requested.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeContainerInstances service method.</param>
            
            <returns>The response from the DescribeContainerInstances service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeContainerInstances">REST API Reference for DescribeContainerInstances Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeContainerInstancesAsync(Amazon.ECS.Model.DescribeContainerInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeContainerInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeContainerInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeContainerInstances">REST API Reference for DescribeContainerInstances Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeServices(Amazon.ECS.Model.DescribeServicesRequest)">
            <summary>
            Describes the specified services running in your cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeServices service method.</param>
            
            <returns>The response from the DescribeServices service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeServices">REST API Reference for DescribeServices Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeServicesAsync(Amazon.ECS.Model.DescribeServicesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeServices operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeServices operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeServices">REST API Reference for DescribeServices Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeTaskDefinition(Amazon.ECS.Model.DescribeTaskDefinitionRequest)">
            <summary>
            Describes a task definition. You can specify a <code>family</code> and <code>revision</code>
            to find information about a specific task definition, or you can simply specify the
            family to find the latest <code>ACTIVE</code> revision in that family.
            
             <note> 
            <para>
            You can only describe <code>INACTIVE</code> task definitions while an active task
            or service references them.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTaskDefinition service method.</param>
            
            <returns>The response from the DescribeTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTaskDefinition">REST API Reference for DescribeTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeTaskDefinitionAsync(Amazon.ECS.Model.DescribeTaskDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeTaskDefinition operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTaskDefinition operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTaskDefinition">REST API Reference for DescribeTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeTasks(Amazon.ECS.Model.DescribeTasksRequest)">
            <summary>
            Describes a specified task or tasks.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTasks service method.</param>
            
            <returns>The response from the DescribeTasks service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTasks">REST API Reference for DescribeTasks Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.DescribeTasksAsync(Amazon.ECS.Model.DescribeTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeTasks operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTasks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTasks">REST API Reference for DescribeTasks Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListAttributes(Amazon.ECS.Model.ListAttributesRequest)">
            <summary>
            Lists the attributes for Amazon ECS resources within a specified target type and cluster.
            When you specify a target type and cluster, <code>ListAttributes</code> returns a
            list of attribute objects, one for each attribute on each resource. You can filter
            the list of results to a single attribute name to only return results that have that
            name. You can also filter the results by attribute name and value, for example, to
            see which container instances in a cluster are running a Linux AMI (<code>ecs.os-type=linux</code>).
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAttributes service method.</param>
            
            <returns>The response from the ListAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListAttributes">REST API Reference for ListAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListAttributesAsync(Amazon.ECS.Model.ListAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListAttributes">REST API Reference for ListAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListClusters(Amazon.ECS.Model.ListClustersRequest)">
            <summary>
            Returns a list of existing clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListClusters service method.</param>
            
            <returns>The response from the ListClusters service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListClusters">REST API Reference for ListClusters Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListClustersAsync(Amazon.ECS.Model.ListClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListClusters operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListClusters operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListClusters">REST API Reference for ListClusters Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListContainerInstances(Amazon.ECS.Model.ListContainerInstancesRequest)">
            <summary>
            Returns a list of container instances in a specified cluster. You can filter the results
            of a <code>ListContainerInstances</code> operation with cluster query language statements
            inside the <code>filter</code> parameter. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
            Query Language</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListContainerInstances service method.</param>
            
            <returns>The response from the ListContainerInstances service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListContainerInstances">REST API Reference for ListContainerInstances Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListContainerInstancesAsync(Amazon.ECS.Model.ListContainerInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListContainerInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListContainerInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListContainerInstances">REST API Reference for ListContainerInstances Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListServices(Amazon.ECS.Model.ListServicesRequest)">
            <summary>
            Lists the services that are running in a specified cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListServices service method.</param>
            
            <returns>The response from the ListServices service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListServices">REST API Reference for ListServices Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListServicesAsync(Amazon.ECS.Model.ListServicesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListServices operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListServices operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListServices">REST API Reference for ListServices Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListTaskDefinitionFamilies(Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest)">
            <summary>
            Returns a list of task definition families that are registered to your account (which
            may include task definition families that no longer have any <code>ACTIVE</code> task
            definition revisions).
            
             
            <para>
            You can filter out task definition families that do not contain any <code>ACTIVE</code>
            task definition revisions by setting the <code>status</code> parameter to <code>ACTIVE</code>.
            You can also filter the results with the <code>familyPrefix</code> parameter.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTaskDefinitionFamilies service method.</param>
            
            <returns>The response from the ListTaskDefinitionFamilies service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTaskDefinitionFamilies">REST API Reference for ListTaskDefinitionFamilies Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListTaskDefinitionFamiliesAsync(Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListTaskDefinitionFamilies operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTaskDefinitionFamilies operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTaskDefinitionFamilies">REST API Reference for ListTaskDefinitionFamilies Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListTaskDefinitions(Amazon.ECS.Model.ListTaskDefinitionsRequest)">
            <summary>
            Returns a list of task definitions that are registered to your account. You can filter
            the results by family name with the <code>familyPrefix</code> parameter or by status
            with the <code>status</code> parameter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTaskDefinitions service method.</param>
            
            <returns>The response from the ListTaskDefinitions service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTaskDefinitions">REST API Reference for ListTaskDefinitions Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListTaskDefinitionsAsync(Amazon.ECS.Model.ListTaskDefinitionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListTaskDefinitions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTaskDefinitions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTaskDefinitions">REST API Reference for ListTaskDefinitions Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListTasks(Amazon.ECS.Model.ListTasksRequest)">
            <summary>
            Returns a list of tasks for a specified cluster. You can filter the results by family
            name, by a particular container instance, or by the desired status of the task with
            the <code>family</code>, <code>containerInstance</code>, and <code>desiredStatus</code>
            parameters.
            
             
            <para>
            Recently-stopped tasks might appear in the returned results. Currently, stopped tasks
            appear in the returned results for at least one hour. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTasks service method.</param>
            
            <returns>The response from the ListTasks service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTasks">REST API Reference for ListTasks Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.ListTasksAsync(Amazon.ECS.Model.ListTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListTasks operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTasks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTasks">REST API Reference for ListTasks Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.PutAttributes(Amazon.ECS.Model.PutAttributesRequest)">
            <summary>
            Create or update an attribute on an Amazon ECS resource. If the attribute does not
            exist, it is created. If the attribute exists, its value is replaced with the specified
            value. To delete an attribute, use <a>DeleteAttributes</a>. For more information,
            see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes">Attributes</a>
            in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAttributes service method.</param>
            
            <returns>The response from the PutAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AttributeLimitExceededException">
            You can apply up to 10 custom attributes per resource. You can view the attributes
            of a resource with <a>ListAttributes</a>. You can remove existing attributes on a
            resource with <a>DeleteAttributes</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TargetNotFoundException">
            The specified target could not be found. You can view your available container instances
            with <a>ListContainerInstances</a>. Amazon ECS container instances are cluster-specific
            and region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutAttributes">REST API Reference for PutAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.PutAttributesAsync(Amazon.ECS.Model.PutAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutAttributes">REST API Reference for PutAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.RegisterTaskDefinition(Amazon.ECS.Model.RegisterTaskDefinitionRequest)">
            <summary>
            Registers a new task definition from the supplied <code>family</code> and <code>containerDefinitions</code>.
            Optionally, you can add data volumes to your containers with the <code>volumes</code>
            parameter. For more information about task definition parameters and defaults, see
            <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html">Amazon
            ECS Task Definitions</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            
             
            <para>
            You can specify an IAM role for your task with the <code>taskRoleArn</code> parameter.
            When you specify an IAM role for a task, its containers can then use the latest versions
            of the AWS CLI or SDKs to make API requests to the AWS services that are specified
            in the IAM policy associated with the role. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html">IAM
            Roles for Tasks</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </para>
             
            <para>
            You can specify a Docker networking mode for the containers in your task definition
            with the <code>networkMode</code> parameter. The available network modes correspond
            to those described in <a href="https://docs.docker.com/engine/reference/run/#/network-settings">Network
            settings</a> in the Docker run reference.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterTaskDefinition service method.</param>
            
            <returns>The response from the RegisterTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/RegisterTaskDefinition">REST API Reference for RegisterTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.RegisterTaskDefinitionAsync(Amazon.ECS.Model.RegisterTaskDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RegisterTaskDefinition operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RegisterTaskDefinition operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/RegisterTaskDefinition">REST API Reference for RegisterTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.RunTask(Amazon.ECS.Model.RunTaskRequest)">
            <summary>
            Starts a new task using the specified task definition.
            
             
            <para>
            You can allow Amazon ECS to place tasks for you, or you can customize how Amazon ECS
            places tasks using placement constraints and placement strategies. For more information,
            see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
            Tasks</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </para>
             
            <para>
            Alternatively, you can use <a>StartTask</a> to use your own scheduler or place tasks
            manually on specific container instances.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RunTask service method.</param>
            
            <returns>The response from the RunTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/RunTask">REST API Reference for RunTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.RunTaskAsync(Amazon.ECS.Model.RunTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RunTask operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RunTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/RunTask">REST API Reference for RunTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.StartTask(Amazon.ECS.Model.StartTaskRequest)">
            <summary>
            Starts a new task from the specified task definition on the specified container instance
            or instances.
            
             
            <para>
            Alternatively, you can use <a>RunTask</a> to place tasks for you. For more information,
            see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
            Tasks</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartTask service method.</param>
            
            <returns>The response from the StartTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/StartTask">REST API Reference for StartTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.StartTaskAsync(Amazon.ECS.Model.StartTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StartTask operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StartTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/StartTask">REST API Reference for StartTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.StopTask(Amazon.ECS.Model.StopTaskRequest)">
            <summary>
            Stops a running task.
            
             
            <para>
            When <a>StopTask</a> is called on a task, the equivalent of <code>docker stop</code>
            is issued to the containers running in the task. This results in a <code>SIGTERM</code>
            and a default 30-second timeout, after which <code>SIGKILL</code> is sent and the
            containers are forcibly stopped. If the container handles the <code>SIGTERM</code>
            gracefully and exits within 30 seconds from receiving it, no <code>SIGKILL</code>
            is sent.
            </para>
             <note> 
            <para>
            The default 30-second timeout can be configured on the Amazon ECS container agent
            with the <code>ECS_CONTAINER_STOP_TIMEOUT</code> variable. For more information, see
            <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS Container Agent Configuration</a> in the <i>Amazon EC2 Container Service Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopTask service method.</param>
            
            <returns>The response from the StopTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/StopTask">REST API Reference for StopTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.StopTaskAsync(Amazon.ECS.Model.StopTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StopTask operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StopTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/StopTask">REST API Reference for StopTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateContainerAgent(Amazon.ECS.Model.UpdateContainerAgentRequest)">
            <summary>
            Updates the Amazon ECS container agent on a specified container instance. Updating
            the Amazon ECS container agent does not interrupt running tasks or services on the
            container instance. The process for updating the agent differs depending on whether
            your container instance was launched with the Amazon ECS-optimized AMI or another
            operating system.
            
             
            <para>
             <code>UpdateContainerAgent</code> requires the Amazon ECS-optimized AMI or Amazon
            Linux with the <code>ecs-init</code> service installed and running. For help updating
            the Amazon ECS container agent on other operating systems, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html#manually_update_agent">Manually
            Updating the Amazon ECS Container Agent</a> in the <i>Amazon EC2 Container Service
            Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateContainerAgent service method.</param>
            
            <returns>The response from the UpdateContainerAgent service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.MissingVersionException">
            Amazon ECS is unable to determine the current version of the Amazon ECS container
            agent on the container instance and does not have enough information to proceed with
            an update. This could be because the agent running on the container instance is an
            older or custom version that does not use our version information.
            </exception>
            <exception cref="T:Amazon.ECS.Model.NoUpdateAvailableException">
            There is no update available for this Amazon ECS container agent. This could be because
            the agent is already running the latest version, or it is so old that there is no
            update path to the current version.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There is already a current Amazon ECS container agent update in progress on the specified
            container instance. If the container agent becomes disconnected while it is in a transitional
            stage, such as <code>PENDING</code> or <code>STAGING</code>, the update process can
            get stuck in that state. However, when the agent reconnects, it resumes where it stopped
            previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateContainerAgent">REST API Reference for UpdateContainerAgent Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateContainerAgentAsync(Amazon.ECS.Model.UpdateContainerAgentRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateContainerAgent operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateContainerAgent operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateContainerAgent">REST API Reference for UpdateContainerAgent Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateContainerInstancesState(Amazon.ECS.Model.UpdateContainerInstancesStateRequest)">
            <summary>
            Modifies the status of an Amazon ECS container instance.
            
             
            <para>
            You can change the status of a container instance to <code>DRAINING</code> to manually
            remove an instance from a cluster, for example to perform system updates, update the
            Docker daemon, or scale down the cluster size. 
            </para>
             
            <para>
            When you set a container instance to <code>DRAINING</code>, Amazon ECS prevents new
            tasks from being scheduled for placement on the container instance and replacement
            service tasks are started on other container instances in the cluster if the resources
            are available. Service tasks on the container instance that are in the <code>PENDING</code>
            state are stopped immediately.
            </para>
             
            <para>
            Service tasks on the container instance that are in the <code>RUNNING</code> state
            are stopped and replaced according the service's deployment configuration parameters,
            <code>minimumHealthyPercent</code> and <code>maximumPercent</code>. Note that you
            can change the deployment configuration of your service using <a>UpdateService</a>.
            </para>
             <ul> <li> 
            <para>
            If <code>minimumHealthyPercent</code> is below 100%, the scheduler can ignore <code>desiredCount</code>
            temporarily during task replacement. For example, <code>desiredCount</code> is four
            tasks, a minimum of 50% allows the scheduler to stop two existing tasks before starting
            two new tasks. If the minimum is 100%, the service scheduler can't remove existing
            tasks until the replacement tasks are considered healthy. Tasks for services that
            do not use a load balancer are considered healthy if they are in the <code>RUNNING</code>
            state. Tasks for services that use a load balancer are considered healthy if they
            are in the <code>RUNNING</code> state and the container instance they are hosted on
            is reported as healthy by the load balancer.
            </para>
             </li> <li> 
            <para>
            The <code>maximumPercent</code> parameter represents an upper limit on the number
            of running tasks during task replacement, which enables you to define the replacement
            batch size. For example, if <code>desiredCount</code> of four tasks, a maximum of
            200% starts four new tasks before stopping the four tasks to be drained (provided
            that the cluster resources required to do this are available). If the maximum is 100%,
            then replacement tasks can't start until the draining tasks have stopped.
            </para>
             </li> </ul> 
            <para>
            Any <code>PENDING</code> or <code>RUNNING</code> tasks that do not belong to a service
            are not affected; you must wait for them to finish or stop them manually.
            </para>
             
            <para>
            A container instance has completed draining when it has no more <code>RUNNING</code>
            tasks. You can verify this using <a>ListTasks</a>.
            </para>
             
            <para>
            When you set a container instance to <code>ACTIVE</code>, the Amazon ECS scheduler
            can begin scheduling tasks on the instance again.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateContainerInstancesState service method.</param>
            
            <returns>The response from the UpdateContainerInstancesState service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateContainerInstancesState">REST API Reference for UpdateContainerInstancesState Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateContainerInstancesStateAsync(Amazon.ECS.Model.UpdateContainerInstancesStateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateContainerInstancesState operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateContainerInstancesState operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateContainerInstancesState">REST API Reference for UpdateContainerInstancesState Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateService(Amazon.ECS.Model.UpdateServiceRequest)">
            <summary>
            Modifies the desired count, deployment configuration, or task definition used in a
            service.
            
             
            <para>
            You can add to or subtract from the number of instantiations of a task definition
            in a service by specifying the cluster that the service is running in and a new <code>desiredCount</code>
            parameter.
            </para>
             
            <para>
            You can use <a>UpdateService</a> to modify your task definition and deploy a new version
            of your service.
            </para>
             
            <para>
            You can also update the deployment configuration of a service. When a deployment is
            triggered by updating the task definition of a service, the service scheduler uses
            the deployment configuration parameters, <code>minimumHealthyPercent</code> and <code>maximumPercent</code>,
            to determine the deployment strategy.
            </para>
             <ul> <li> 
            <para>
            If <code>minimumHealthyPercent</code> is below 100%, the scheduler can ignore <code>desiredCount</code>
            temporarily during a deployment. For example, if <code>desiredCount</code> is four
            tasks, a minimum of 50% allows the scheduler to stop two existing tasks before starting
            two new tasks. Tasks for services that do not use a load balancer are considered healthy
            if they are in the <code>RUNNING</code> state. Tasks for services that use a load
            balancer are considered healthy if they are in the <code>RUNNING</code> state and
            the container instance they are hosted on is reported as healthy by the load balancer.
            </para>
             </li> <li> 
            <para>
            The <code>maximumPercent</code> parameter represents an upper limit on the number
            of running tasks during a deployment, which enables you to define the deployment batch
            size. For example, if <code>desiredCount</code> is four tasks, a maximum of 200% starts
            four new tasks before stopping the four older tasks (provided that the cluster resources
            required to do this are available).
            </para>
             </li> </ul> 
            <para>
            When <a>UpdateService</a> stops a task during a deployment, the equivalent of <code>docker
            stop</code> is issued to the containers running in the task. This results in a <code>SIGTERM</code>
            and a 30-second timeout, after which <code>SIGKILL</code> is sent and the containers
            are forcibly stopped. If the container handles the <code>SIGTERM</code> gracefully
            and exits within 30 seconds from receiving it, no <code>SIGKILL</code> is sent.
            </para>
             
            <para>
            When the service scheduler launches new tasks, it determines task placement in your
            cluster with the following logic:
            </para>
             <ul> <li> 
            <para>
            Determine which of the container instances in your cluster can support your service's
            task definition (for example, they have the required CPU, memory, ports, and container
            instance attributes).
            </para>
             </li> <li> 
            <para>
            By default, the service scheduler attempts to balance tasks across Availability Zones
            in this manner (although you can choose a different placement strategy):
            </para>
             <ul> <li> 
            <para>
            Sort the valid container instances by the fewest number of running tasks for this
            service in the same Availability Zone as the instance. For example, if zone A has
            one running service task and zones B and C each have zero, valid container instances
            in either zone B or C are considered optimal for placement.
            </para>
             </li> <li> 
            <para>
            Place the new service task on a valid container instance in an optimal Availability
            Zone (based on the previous steps), favoring container instances with the fewest number
            of running tasks for this service.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            When the service scheduler stops running tasks, it attempts to maintain balance across
            the Availability Zones in your cluster using the following logic: 
            </para>
             <ul> <li> 
            <para>
            Sort the container instances by the largest number of running tasks for this service
            in the same Availability Zone as the instance. For example, if zone A has one running
            service task and zones B and C each have two, container instances in either zone B
            or C are considered optimal for termination.
            </para>
             </li> <li> 
            <para>
            Stop the task on a container instance in an optimal Availability Zone (based on the
            previous steps), favoring container instances with the largest number of running tasks
            for this service.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateService service method.</param>
            
            <returns>The response from the UpdateService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You cannot update a service that is not active.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateService">REST API Reference for UpdateService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.AmazonECSClient.UpdateServiceAsync(Amazon.ECS.Model.UpdateServiceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateService operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateService operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateService">REST API Reference for UpdateService Operation</seealso>
        </member>
        <member name="T:Amazon.ECS.IAmazonECS">
             <summary>
             Interface for accessing ECS
            
             Amazon EC2 Container Service (Amazon ECS) is a highly scalable, fast, container management
             service that makes it easy to run, stop, and manage Docker containers on a cluster
             of EC2 instances. Amazon ECS lets you launch and stop container-enabled applications
             with simple API calls, allows you to get the state of your cluster from a centralized
             service, and gives you access to many familiar Amazon EC2 features like security groups,
             Amazon EBS volumes, and IAM roles.
             
              
             <para>
             You can use Amazon ECS to schedule the placement of containers across your cluster
             based on your resource needs, isolation policies, and availability requirements. Amazon
             EC2 Container Service eliminates the need for you to operate your own cluster management
             and configuration management systems or worry about scaling your management infrastructure.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.CreateCluster(Amazon.ECS.Model.CreateClusterRequest)">
            <summary>
            Creates a new Amazon ECS cluster. By default, your account receives a <code>default</code>
            cluster when you launch your first container instance. However, you can create your
            own cluster with a unique name with the <code>CreateCluster</code> action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCluster service method.</param>
            
            <returns>The response from the CreateCluster service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateCluster">REST API Reference for CreateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.CreateClusterAsync(Amazon.ECS.Model.CreateClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateCluster operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateCluster operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateCluster">REST API Reference for CreateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.CreateService(Amazon.ECS.Model.CreateServiceRequest)">
            <summary>
            Runs and maintains a desired number of tasks from a specified task definition. If
            the number of tasks running in a service drops below <code>desiredCount</code>, Amazon
            ECS spawns another copy of the task in the specified cluster. To update an existing
            service, see <a>UpdateService</a>.
            
             
            <para>
            In addition to maintaining the desired count of tasks in your service, you can optionally
            run your service behind a load balancer. The load balancer distributes traffic across
            the tasks that are associated with the service. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-load-balancing.html">Service
            Load Balancing</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </para>
             
            <para>
            You can optionally specify a deployment configuration for your service. During a deployment
            (which is triggered by changing the task definition or the desired count of a service
            with an <a>UpdateService</a> operation), the service scheduler uses the <code>minimumHealthyPercent</code>
            and <code>maximumPercent</code> parameters to determine the deployment strategy.
            </para>
             
            <para>
            The <code>minimumHealthyPercent</code> represents a lower limit on the number of your
            service's tasks that must remain in the <code>RUNNING</code> state during a deployment,
            as a percentage of the <code>desiredCount</code> (rounded up to the nearest integer).
            This parameter enables you to deploy without using additional cluster capacity. For
            example, if your service has a <code>desiredCount</code> of four tasks and a <code>minimumHealthyPercent</code>
            of 50%, the scheduler can stop two existing tasks to free up cluster capacity before
            starting two new tasks. Tasks for services that <i>do not</i> use a load balancer
            are considered healthy if they are in the <code>RUNNING</code> state. Tasks for services
            that <i>do</i> use a load balancer are considered healthy if they are in the <code>RUNNING</code>
            state and the container instance they are hosted on is reported as healthy by the
            load balancer. The default value for <code>minimumHealthyPercent</code> is 50% in
            the console and 100% for the AWS CLI, the AWS SDKs, and the APIs.
            </para>
             
            <para>
            The <code>maximumPercent</code> parameter represents an upper limit on the number
            of your service's tasks that are allowed in the <code>RUNNING</code> or <code>PENDING</code>
            state during a deployment, as a percentage of the <code>desiredCount</code> (rounded
            down to the nearest integer). This parameter enables you to define the deployment
            batch size. For example, if your service has a <code>desiredCount</code> of four tasks
            and a <code>maximumPercent</code> value of 200%, the scheduler can start four new
            tasks before stopping the four older tasks (provided that the cluster resources required
            to do this are available). The default value for <code>maximumPercent</code> is 200%.
            </para>
             
            <para>
            When the service scheduler launches new tasks, it determines task placement in your
            cluster using the following logic:
            </para>
             <ul> <li> 
            <para>
            Determine which of the container instances in your cluster can support your service's
            task definition (for example, they have the required CPU, memory, ports, and container
            instance attributes).
            </para>
             </li> <li> 
            <para>
            By default, the service scheduler attempts to balance tasks across Availability Zones
            in this manner (although you can choose a different placement strategy) with the <code>placementStrategy</code>
            parameter):
            </para>
             <ul> <li> 
            <para>
            Sort the valid container instances by the fewest number of running tasks for this
            service in the same Availability Zone as the instance. For example, if zone A has
            one running service task and zones B and C each have zero, valid container instances
            in either zone B or C are considered optimal for placement.
            </para>
             </li> <li> 
            <para>
            Place the new service task on a valid container instance in an optimal Availability
            Zone (based on the previous steps), favoring container instances with the fewest number
            of running tasks for this service.
            </para>
             </li> </ul> </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateService service method.</param>
            
            <returns>The response from the CreateService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateService">REST API Reference for CreateService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.CreateServiceAsync(Amazon.ECS.Model.CreateServiceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateService operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateService operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/CreateService">REST API Reference for CreateService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteAttributes(Amazon.ECS.Model.DeleteAttributesRequest)">
            <summary>
            Deletes one or more custom attributes from an Amazon ECS resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteAttributes service method.</param>
            
            <returns>The response from the DeleteAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TargetNotFoundException">
            The specified target could not be found. You can view your available container instances
            with <a>ListContainerInstances</a>. Amazon ECS container instances are cluster-specific
            and region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteAttributes">REST API Reference for DeleteAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteAttributesAsync(Amazon.ECS.Model.DeleteAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteAttributes">REST API Reference for DeleteAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteCluster(Amazon.ECS.Model.DeleteClusterRequest)">
            <summary>
            Deletes the specified cluster. You must deregister all container instances from this
            cluster before you may delete it. You can list the container instances in a cluster
            with <a>ListContainerInstances</a> and deregister them with <a>DeregisterContainerInstance</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCluster service method.</param>
            
            <returns>The response from the DeleteCluster service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterContainsContainerInstancesException">
            You cannot delete a cluster that has registered container instances. You must first
            deregister the container instances before you can delete the cluster. For more information,
            see <a>DeregisterContainerInstance</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterContainsServicesException">
            You cannot delete a cluster that contains services. You must first update the service
            to reduce its desired task count to 0 and then delete the service. For more information,
            see <a>UpdateService</a> and <a>DeleteService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteCluster">REST API Reference for DeleteCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteClusterAsync(Amazon.ECS.Model.DeleteClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteCluster operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteCluster operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteCluster">REST API Reference for DeleteCluster Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteService(Amazon.ECS.Model.DeleteServiceRequest)">
            <summary>
            Deletes a specified service within a cluster. You can delete a service if you have
            no running tasks in it and the desired task count is zero. If the service is actively
            maintaining tasks, you cannot delete it, and you must update the service to a desired
            task count of zero. For more information, see <a>UpdateService</a>.
            
             <note> 
            <para>
            When you delete a service, if there are still running tasks that require cleanup,
            the service status moves from <code>ACTIVE</code> to <code>DRAINING</code>, and the
            service is no longer visible in the console or in <a>ListServices</a> API operations.
            After the tasks have stopped, then the service status moves from <code>DRAINING</code>
            to <code>INACTIVE</code>. Services in the <code>DRAINING</code> or <code>INACTIVE</code>
            status can still be viewed with <a>DescribeServices</a> API operations; however, in
            the future, <code>INACTIVE</code> services may be cleaned up and purged from Amazon
            ECS record keeping, and <a>DescribeServices</a> API operations on those services will
            return a <code>ServiceNotFoundException</code> error.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteService service method.</param>
            
            <returns>The response from the DeleteService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteService">REST API Reference for DeleteService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeleteServiceAsync(Amazon.ECS.Model.DeleteServiceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteService operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteService operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeleteService">REST API Reference for DeleteService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeregisterContainerInstance(Amazon.ECS.Model.DeregisterContainerInstanceRequest)">
            <summary>
            Deregisters an Amazon ECS container instance from the specified cluster. This instance
            is no longer available to run tasks.
            
             
            <para>
            If you intend to use the container instance for some other purpose after deregistration,
            you should stop all of the tasks running on the container instance before deregistration
            to avoid any orphaned tasks from consuming resources.
            </para>
             
            <para>
            Deregistering a container instance removes the instance from a cluster, but it does
            not terminate the EC2 instance; if you are finished using the instance, be sure to
            terminate it in the Amazon EC2 console to stop billing.
            </para>
             <note> 
            <para>
            If you terminate a running container instance, Amazon ECS automatically deregisters
            the instance from your cluster (stopped container instances or instances with disconnected
            agents are not automatically deregistered when terminated).
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterContainerInstance service method.</param>
            
            <returns>The response from the DeregisterContainerInstance service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeregisterContainerInstance">REST API Reference for DeregisterContainerInstance Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeregisterContainerInstanceAsync(Amazon.ECS.Model.DeregisterContainerInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeregisterContainerInstance operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeregisterContainerInstance operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeregisterContainerInstance">REST API Reference for DeregisterContainerInstance Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeregisterTaskDefinition(Amazon.ECS.Model.DeregisterTaskDefinitionRequest)">
            <summary>
            Deregisters the specified task definition by family and revision. Upon deregistration,
            the task definition is marked as <code>INACTIVE</code>. Existing tasks and services
            that reference an <code>INACTIVE</code> task definition continue to run without disruption.
            Existing services that reference an <code>INACTIVE</code> task definition can still
            scale up or down by modifying the service's desired count.
            
             
            <para>
            You cannot use an <code>INACTIVE</code> task definition to run new tasks or create
            new services, and you cannot update an existing service to reference an <code>INACTIVE</code>
            task definition (although there may be up to a 10 minute window following deregistration
            where these restrictions have not yet taken effect).
            </para>
             <note> 
            <para>
            At this time, <code>INACTIVE</code> task definitions remain discoverable in your account
            indefinitely; however, this behavior is subject to change in the future, so you should
            not rely on <code>INACTIVE</code> task definitions persisting beyond the life cycle
            of any associated tasks and services.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterTaskDefinition service method.</param>
            
            <returns>The response from the DeregisterTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeregisterTaskDefinition">REST API Reference for DeregisterTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DeregisterTaskDefinitionAsync(Amazon.ECS.Model.DeregisterTaskDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeregisterTaskDefinition operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeregisterTaskDefinition operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DeregisterTaskDefinition">REST API Reference for DeregisterTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeClusters(Amazon.ECS.Model.DescribeClustersRequest)">
            <summary>
            Describes one or more of your clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeClusters service method.</param>
            
            <returns>The response from the DescribeClusters service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeClusters">REST API Reference for DescribeClusters Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeClustersAsync(Amazon.ECS.Model.DescribeClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeClusters operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeClusters operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeClusters">REST API Reference for DescribeClusters Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeContainerInstances(Amazon.ECS.Model.DescribeContainerInstancesRequest)">
            <summary>
            Describes Amazon EC2 Container Service container instances. Returns metadata about
            registered and remaining resources on each container instance requested.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeContainerInstances service method.</param>
            
            <returns>The response from the DescribeContainerInstances service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeContainerInstances">REST API Reference for DescribeContainerInstances Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeContainerInstancesAsync(Amazon.ECS.Model.DescribeContainerInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeContainerInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeContainerInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeContainerInstances">REST API Reference for DescribeContainerInstances Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeServices(Amazon.ECS.Model.DescribeServicesRequest)">
            <summary>
            Describes the specified services running in your cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeServices service method.</param>
            
            <returns>The response from the DescribeServices service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeServices">REST API Reference for DescribeServices Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeServicesAsync(Amazon.ECS.Model.DescribeServicesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeServices operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeServices operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeServices">REST API Reference for DescribeServices Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeTaskDefinition(Amazon.ECS.Model.DescribeTaskDefinitionRequest)">
            <summary>
            Describes a task definition. You can specify a <code>family</code> and <code>revision</code>
            to find information about a specific task definition, or you can simply specify the
            family to find the latest <code>ACTIVE</code> revision in that family.
            
             <note> 
            <para>
            You can only describe <code>INACTIVE</code> task definitions while an active task
            or service references them.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTaskDefinition service method.</param>
            
            <returns>The response from the DescribeTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTaskDefinition">REST API Reference for DescribeTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeTaskDefinitionAsync(Amazon.ECS.Model.DescribeTaskDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeTaskDefinition operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTaskDefinition operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTaskDefinition">REST API Reference for DescribeTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeTasks(Amazon.ECS.Model.DescribeTasksRequest)">
            <summary>
            Describes a specified task or tasks.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTasks service method.</param>
            
            <returns>The response from the DescribeTasks service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTasks">REST API Reference for DescribeTasks Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.DescribeTasksAsync(Amazon.ECS.Model.DescribeTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeTasks operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTasks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/DescribeTasks">REST API Reference for DescribeTasks Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListAttributes(Amazon.ECS.Model.ListAttributesRequest)">
            <summary>
            Lists the attributes for Amazon ECS resources within a specified target type and cluster.
            When you specify a target type and cluster, <code>ListAttributes</code> returns a
            list of attribute objects, one for each attribute on each resource. You can filter
            the list of results to a single attribute name to only return results that have that
            name. You can also filter the results by attribute name and value, for example, to
            see which container instances in a cluster are running a Linux AMI (<code>ecs.os-type=linux</code>).
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAttributes service method.</param>
            
            <returns>The response from the ListAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListAttributes">REST API Reference for ListAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListAttributesAsync(Amazon.ECS.Model.ListAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListAttributes">REST API Reference for ListAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListClusters(Amazon.ECS.Model.ListClustersRequest)">
            <summary>
            Returns a list of existing clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListClusters service method.</param>
            
            <returns>The response from the ListClusters service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListClusters">REST API Reference for ListClusters Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListClustersAsync(Amazon.ECS.Model.ListClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListClusters operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListClusters operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListClusters">REST API Reference for ListClusters Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListContainerInstances(Amazon.ECS.Model.ListContainerInstancesRequest)">
            <summary>
            Returns a list of container instances in a specified cluster. You can filter the results
            of a <code>ListContainerInstances</code> operation with cluster query language statements
            inside the <code>filter</code> parameter. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html">Cluster
            Query Language</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListContainerInstances service method.</param>
            
            <returns>The response from the ListContainerInstances service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListContainerInstances">REST API Reference for ListContainerInstances Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListContainerInstancesAsync(Amazon.ECS.Model.ListContainerInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListContainerInstances operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListContainerInstances operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListContainerInstances">REST API Reference for ListContainerInstances Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListServices(Amazon.ECS.Model.ListServicesRequest)">
            <summary>
            Lists the services that are running in a specified cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListServices service method.</param>
            
            <returns>The response from the ListServices service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListServices">REST API Reference for ListServices Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListServicesAsync(Amazon.ECS.Model.ListServicesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListServices operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListServices operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListServices">REST API Reference for ListServices Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListTaskDefinitionFamilies(Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest)">
            <summary>
            Returns a list of task definition families that are registered to your account (which
            may include task definition families that no longer have any <code>ACTIVE</code> task
            definition revisions).
            
             
            <para>
            You can filter out task definition families that do not contain any <code>ACTIVE</code>
            task definition revisions by setting the <code>status</code> parameter to <code>ACTIVE</code>.
            You can also filter the results with the <code>familyPrefix</code> parameter.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTaskDefinitionFamilies service method.</param>
            
            <returns>The response from the ListTaskDefinitionFamilies service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTaskDefinitionFamilies">REST API Reference for ListTaskDefinitionFamilies Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListTaskDefinitionFamiliesAsync(Amazon.ECS.Model.ListTaskDefinitionFamiliesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListTaskDefinitionFamilies operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTaskDefinitionFamilies operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTaskDefinitionFamilies">REST API Reference for ListTaskDefinitionFamilies Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListTaskDefinitions(Amazon.ECS.Model.ListTaskDefinitionsRequest)">
            <summary>
            Returns a list of task definitions that are registered to your account. You can filter
            the results by family name with the <code>familyPrefix</code> parameter or by status
            with the <code>status</code> parameter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTaskDefinitions service method.</param>
            
            <returns>The response from the ListTaskDefinitions service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTaskDefinitions">REST API Reference for ListTaskDefinitions Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListTaskDefinitionsAsync(Amazon.ECS.Model.ListTaskDefinitionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListTaskDefinitions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTaskDefinitions operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTaskDefinitions">REST API Reference for ListTaskDefinitions Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListTasks(Amazon.ECS.Model.ListTasksRequest)">
            <summary>
            Returns a list of tasks for a specified cluster. You can filter the results by family
            name, by a particular container instance, or by the desired status of the task with
            the <code>family</code>, <code>containerInstance</code>, and <code>desiredStatus</code>
            parameters.
            
             
            <para>
            Recently-stopped tasks might appear in the returned results. Currently, stopped tasks
            appear in the returned results for at least one hour. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTasks service method.</param>
            
            <returns>The response from the ListTasks service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTasks">REST API Reference for ListTasks Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.ListTasksAsync(Amazon.ECS.Model.ListTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListTasks operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTasks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/ListTasks">REST API Reference for ListTasks Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.PutAttributes(Amazon.ECS.Model.PutAttributesRequest)">
            <summary>
            Create or update an attribute on an Amazon ECS resource. If the attribute does not
            exist, it is created. If the attribute exists, its value is replaced with the specified
            value. To delete an attribute, use <a>DeleteAttributes</a>. For more information,
            see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes">Attributes</a>
            in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAttributes service method.</param>
            
            <returns>The response from the PutAttributes service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.AttributeLimitExceededException">
            You can apply up to 10 custom attributes per resource. You can view the attributes
            of a resource with <a>ListAttributes</a>. You can remove existing attributes on a
            resource with <a>DeleteAttributes</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.TargetNotFoundException">
            The specified target could not be found. You can view your available container instances
            with <a>ListContainerInstances</a>. Amazon ECS container instances are cluster-specific
            and region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutAttributes">REST API Reference for PutAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.PutAttributesAsync(Amazon.ECS.Model.PutAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutAttributes operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/PutAttributes">REST API Reference for PutAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.RegisterTaskDefinition(Amazon.ECS.Model.RegisterTaskDefinitionRequest)">
            <summary>
            Registers a new task definition from the supplied <code>family</code> and <code>containerDefinitions</code>.
            Optionally, you can add data volumes to your containers with the <code>volumes</code>
            parameter. For more information about task definition parameters and defaults, see
            <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html">Amazon
            ECS Task Definitions</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            
             
            <para>
            You can specify an IAM role for your task with the <code>taskRoleArn</code> parameter.
            When you specify an IAM role for a task, its containers can then use the latest versions
            of the AWS CLI or SDKs to make API requests to the AWS services that are specified
            in the IAM policy associated with the role. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html">IAM
            Roles for Tasks</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </para>
             
            <para>
            You can specify a Docker networking mode for the containers in your task definition
            with the <code>networkMode</code> parameter. The available network modes correspond
            to those described in <a href="https://docs.docker.com/engine/reference/run/#/network-settings">Network
            settings</a> in the Docker run reference.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterTaskDefinition service method.</param>
            
            <returns>The response from the RegisterTaskDefinition service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/RegisterTaskDefinition">REST API Reference for RegisterTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.RegisterTaskDefinitionAsync(Amazon.ECS.Model.RegisterTaskDefinitionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RegisterTaskDefinition operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RegisterTaskDefinition operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/RegisterTaskDefinition">REST API Reference for RegisterTaskDefinition Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.RunTask(Amazon.ECS.Model.RunTaskRequest)">
            <summary>
            Starts a new task using the specified task definition.
            
             
            <para>
            You can allow Amazon ECS to place tasks for you, or you can customize how Amazon ECS
            places tasks using placement constraints and placement strategies. For more information,
            see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
            Tasks</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </para>
             
            <para>
            Alternatively, you can use <a>StartTask</a> to use your own scheduler or place tasks
            manually on specific container instances.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RunTask service method.</param>
            
            <returns>The response from the RunTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/RunTask">REST API Reference for RunTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.RunTaskAsync(Amazon.ECS.Model.RunTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RunTask operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RunTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/RunTask">REST API Reference for RunTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.StartTask(Amazon.ECS.Model.StartTaskRequest)">
            <summary>
            Starts a new task from the specified task definition on the specified container instance
            or instances.
            
             
            <para>
            Alternatively, you can use <a>RunTask</a> to place tasks for you. For more information,
            see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html">Scheduling
            Tasks</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartTask service method.</param>
            
            <returns>The response from the StartTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/StartTask">REST API Reference for StartTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.StartTaskAsync(Amazon.ECS.Model.StartTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StartTask operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StartTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/StartTask">REST API Reference for StartTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.StopTask(Amazon.ECS.Model.StopTaskRequest)">
            <summary>
            Stops a running task.
            
             
            <para>
            When <a>StopTask</a> is called on a task, the equivalent of <code>docker stop</code>
            is issued to the containers running in the task. This results in a <code>SIGTERM</code>
            and a default 30-second timeout, after which <code>SIGKILL</code> is sent and the
            containers are forcibly stopped. If the container handles the <code>SIGTERM</code>
            gracefully and exits within 30 seconds from receiving it, no <code>SIGKILL</code>
            is sent.
            </para>
             <note> 
            <para>
            The default 30-second timeout can be configured on the Amazon ECS container agent
            with the <code>ECS_CONTAINER_STOP_TIMEOUT</code> variable. For more information, see
            <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon
            ECS Container Agent Configuration</a> in the <i>Amazon EC2 Container Service Developer
            Guide</i>.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopTask service method.</param>
            
            <returns>The response from the StopTask service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/StopTask">REST API Reference for StopTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.StopTaskAsync(Amazon.ECS.Model.StopTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StopTask operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StopTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/StopTask">REST API Reference for StopTask Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateContainerAgent(Amazon.ECS.Model.UpdateContainerAgentRequest)">
            <summary>
            Updates the Amazon ECS container agent on a specified container instance. Updating
            the Amazon ECS container agent does not interrupt running tasks or services on the
            container instance. The process for updating the agent differs depending on whether
            your container instance was launched with the Amazon ECS-optimized AMI or another
            operating system.
            
             
            <para>
             <code>UpdateContainerAgent</code> requires the Amazon ECS-optimized AMI or Amazon
            Linux with the <code>ecs-init</code> service installed and running. For help updating
            the Amazon ECS container agent on other operating systems, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html#manually_update_agent">Manually
            Updating the Amazon ECS Container Agent</a> in the <i>Amazon EC2 Container Service
            Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateContainerAgent service method.</param>
            
            <returns>The response from the UpdateContainerAgent service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.MissingVersionException">
            Amazon ECS is unable to determine the current version of the Amazon ECS container
            agent on the container instance and does not have enough information to proceed with
            an update. This could be because the agent running on the container instance is an
            older or custom version that does not use our version information.
            </exception>
            <exception cref="T:Amazon.ECS.Model.NoUpdateAvailableException">
            There is no update available for this Amazon ECS container agent. This could be because
            the agent is already running the latest version, or it is so old that there is no
            update path to the current version.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.UpdateInProgressException">
            There is already a current Amazon ECS container agent update in progress on the specified
            container instance. If the container agent becomes disconnected while it is in a transitional
            stage, such as <code>PENDING</code> or <code>STAGING</code>, the update process can
            get stuck in that state. However, when the agent reconnects, it resumes where it stopped
            previously.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateContainerAgent">REST API Reference for UpdateContainerAgent Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateContainerAgentAsync(Amazon.ECS.Model.UpdateContainerAgentRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateContainerAgent operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateContainerAgent operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateContainerAgent">REST API Reference for UpdateContainerAgent Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateContainerInstancesState(Amazon.ECS.Model.UpdateContainerInstancesStateRequest)">
            <summary>
            Modifies the status of an Amazon ECS container instance.
            
             
            <para>
            You can change the status of a container instance to <code>DRAINING</code> to manually
            remove an instance from a cluster, for example to perform system updates, update the
            Docker daemon, or scale down the cluster size. 
            </para>
             
            <para>
            When you set a container instance to <code>DRAINING</code>, Amazon ECS prevents new
            tasks from being scheduled for placement on the container instance and replacement
            service tasks are started on other container instances in the cluster if the resources
            are available. Service tasks on the container instance that are in the <code>PENDING</code>
            state are stopped immediately.
            </para>
             
            <para>
            Service tasks on the container instance that are in the <code>RUNNING</code> state
            are stopped and replaced according the service's deployment configuration parameters,
            <code>minimumHealthyPercent</code> and <code>maximumPercent</code>. Note that you
            can change the deployment configuration of your service using <a>UpdateService</a>.
            </para>
             <ul> <li> 
            <para>
            If <code>minimumHealthyPercent</code> is below 100%, the scheduler can ignore <code>desiredCount</code>
            temporarily during task replacement. For example, <code>desiredCount</code> is four
            tasks, a minimum of 50% allows the scheduler to stop two existing tasks before starting
            two new tasks. If the minimum is 100%, the service scheduler can't remove existing
            tasks until the replacement tasks are considered healthy. Tasks for services that
            do not use a load balancer are considered healthy if they are in the <code>RUNNING</code>
            state. Tasks for services that use a load balancer are considered healthy if they
            are in the <code>RUNNING</code> state and the container instance they are hosted on
            is reported as healthy by the load balancer.
            </para>
             </li> <li> 
            <para>
            The <code>maximumPercent</code> parameter represents an upper limit on the number
            of running tasks during task replacement, which enables you to define the replacement
            batch size. For example, if <code>desiredCount</code> of four tasks, a maximum of
            200% starts four new tasks before stopping the four tasks to be drained (provided
            that the cluster resources required to do this are available). If the maximum is 100%,
            then replacement tasks can't start until the draining tasks have stopped.
            </para>
             </li> </ul> 
            <para>
            Any <code>PENDING</code> or <code>RUNNING</code> tasks that do not belong to a service
            are not affected; you must wait for them to finish or stop them manually.
            </para>
             
            <para>
            A container instance has completed draining when it has no more <code>RUNNING</code>
            tasks. You can verify this using <a>ListTasks</a>.
            </para>
             
            <para>
            When you set a container instance to <code>ACTIVE</code>, the Amazon ECS scheduler
            can begin scheduling tasks on the instance again.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateContainerInstancesState service method.</param>
            
            <returns>The response from the UpdateContainerInstancesState service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateContainerInstancesState">REST API Reference for UpdateContainerInstancesState Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateContainerInstancesStateAsync(Amazon.ECS.Model.UpdateContainerInstancesStateRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateContainerInstancesState operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateContainerInstancesState operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateContainerInstancesState">REST API Reference for UpdateContainerInstancesState Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateService(Amazon.ECS.Model.UpdateServiceRequest)">
            <summary>
            Modifies the desired count, deployment configuration, or task definition used in a
            service.
            
             
            <para>
            You can add to or subtract from the number of instantiations of a task definition
            in a service by specifying the cluster that the service is running in and a new <code>desiredCount</code>
            parameter.
            </para>
             
            <para>
            You can use <a>UpdateService</a> to modify your task definition and deploy a new version
            of your service.
            </para>
             
            <para>
            You can also update the deployment configuration of a service. When a deployment is
            triggered by updating the task definition of a service, the service scheduler uses
            the deployment configuration parameters, <code>minimumHealthyPercent</code> and <code>maximumPercent</code>,
            to determine the deployment strategy.
            </para>
             <ul> <li> 
            <para>
            If <code>minimumHealthyPercent</code> is below 100%, the scheduler can ignore <code>desiredCount</code>
            temporarily during a deployment. For example, if <code>desiredCount</code> is four
            tasks, a minimum of 50% allows the scheduler to stop two existing tasks before starting
            two new tasks. Tasks for services that do not use a load balancer are considered healthy
            if they are in the <code>RUNNING</code> state. Tasks for services that use a load
            balancer are considered healthy if they are in the <code>RUNNING</code> state and
            the container instance they are hosted on is reported as healthy by the load balancer.
            </para>
             </li> <li> 
            <para>
            The <code>maximumPercent</code> parameter represents an upper limit on the number
            of running tasks during a deployment, which enables you to define the deployment batch
            size. For example, if <code>desiredCount</code> is four tasks, a maximum of 200% starts
            four new tasks before stopping the four older tasks (provided that the cluster resources
            required to do this are available).
            </para>
             </li> </ul> 
            <para>
            When <a>UpdateService</a> stops a task during a deployment, the equivalent of <code>docker
            stop</code> is issued to the containers running in the task. This results in a <code>SIGTERM</code>
            and a 30-second timeout, after which <code>SIGKILL</code> is sent and the containers
            are forcibly stopped. If the container handles the <code>SIGTERM</code> gracefully
            and exits within 30 seconds from receiving it, no <code>SIGKILL</code> is sent.
            </para>
             
            <para>
            When the service scheduler launches new tasks, it determines task placement in your
            cluster with the following logic:
            </para>
             <ul> <li> 
            <para>
            Determine which of the container instances in your cluster can support your service's
            task definition (for example, they have the required CPU, memory, ports, and container
            instance attributes).
            </para>
             </li> <li> 
            <para>
            By default, the service scheduler attempts to balance tasks across Availability Zones
            in this manner (although you can choose a different placement strategy):
            </para>
             <ul> <li> 
            <para>
            Sort the valid container instances by the fewest number of running tasks for this
            service in the same Availability Zone as the instance. For example, if zone A has
            one running service task and zones B and C each have zero, valid container instances
            in either zone B or C are considered optimal for placement.
            </para>
             </li> <li> 
            <para>
            Place the new service task on a valid container instance in an optimal Availability
            Zone (based on the previous steps), favoring container instances with the fewest number
            of running tasks for this service.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            When the service scheduler stops running tasks, it attempts to maintain balance across
            the Availability Zones in your cluster using the following logic: 
            </para>
             <ul> <li> 
            <para>
            Sort the container instances by the largest number of running tasks for this service
            in the same Availability Zone as the instance. For example, if zone A has one running
            service task and zones B and C each have two, container instances in either zone B
            or C are considered optimal for termination.
            </para>
             </li> <li> 
            <para>
            Stop the task on a container instance in an optimal Availability Zone (based on the
            previous steps), favoring container instances with the largest number of running tasks
            for this service.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateService service method.</param>
            
            <returns>The response from the UpdateService service method, as returned by ECS.</returns>
            <exception cref="T:Amazon.ECS.Model.ClientException">
            These errors are usually caused by a client action, such as using an action or resource
            on behalf of a user that doesn't have permission to use the action or resource, or
            specifying an identifier that is not valid.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ClusterNotFoundException">
            The specified cluster could not be found. You can view your available clusters with
            <a>ListClusters</a>. Amazon ECS clusters are region-specific.
            </exception>
            <exception cref="T:Amazon.ECS.Model.InvalidParameterException">
            The specified parameter is invalid. Review the available parameters for the API request.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServerException">
            These errors are usually caused by a server issue.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotActiveException">
            The specified service is not active. You cannot update a service that is not active.
            If you have previously deleted a service, you can re-create it with <a>CreateService</a>.
            </exception>
            <exception cref="T:Amazon.ECS.Model.ServiceNotFoundException">
            The specified service could not be found. You can view your available services with
            <a>ListServices</a>. Amazon ECS services are cluster-specific and region-specific.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateService">REST API Reference for UpdateService Operation</seealso>
        </member>
        <member name="M:Amazon.ECS.IAmazonECS.UpdateServiceAsync(Amazon.ECS.Model.UpdateServiceRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateService operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateService operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/ecs-2014-11-13/UpdateService">REST API Reference for UpdateService Operation</seealso>
        </member>
    </members>
</doc>
